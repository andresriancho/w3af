{
  "swagger": "2.0",
  "info": {
    "version": "v1",
    "title": "public_web_api"
  },
  "host": "target.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/api/Cards/Purchases/Activate": {
      "post": {
        "tags": [
          "Cards"
        ],
        "operationId": "CreateActivateCardPurchase_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "createActivateCardPurchaseRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateActivateCardPurchaseRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[Object]"
            }
          }
        }
      }
    },
    "/api/Partners/{PartnerId}/CreditTemplates/{CreditTemplateId}/_commands/Activate": {
      "post": {
        "tags": [
          "CreditTemplates"
        ],
        "operationId": "CreateActivateCreditTemplateForMerchantCommand_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateActivateCreditTemplateForMerchantCommandRequest"
            }
          },
          {
            "name": "PartnerId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "CreditTemplateId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[Object]"
            }
          }
        }
      }
    },
    "/api/PendingInvoices/{pendingInvoiceId}/_commands/AntiFraudCallback": {
      "post": {
        "tags": [
          "PendingInvoices"
        ],
        "operationId": "CreateAntiFraudCallbackCommand_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "antiFraudCallbackRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateAntiFraudCallbackCommandRequest"
            }
          },
          {
            "name": "pendingInvoiceId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[Object]"
            }
          }
        }
      }
    },
    "/api/cards/transactions": {
      "post": {
        "tags": [
          "Cards"
        ],
        "operationId": "CreateCardTransaction_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateCardTransactionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[Object]"
            }
          }
        }
      }
    },
    "/api/Cards/Transaction/{TransactionId}/_commands/SetNotificationDate": {
      "post": {
        "tags": [
          "Cards"
        ],
        "operationId": "CreateCardTransactionSetNotificationDateCommand_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateCardTransactionSetNotificationDateCommandRequest"
            }
          },
          {
            "name": "TransactionId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[CreateCardTransactionSetNotificationDateCommandResponse]"
            }
          }
        }
      }
    },
    "/api/ReservationApplications/{ReservationApplicationId}/_commands/Complete": {
      "post": {
        "tags": [
          "ReservationApplication"
        ],
        "operationId": "CreateCompleteReservationApplicationCommand_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateCompleteReservationApplicationCommandRequest"
            }
          },
          {
            "name": "ReservationApplicationId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[CreateCompleteReservationApplicationCommandResponse]"
            }
          }
        }
      }
    },
    "/api/Accounts/{AccountId}/_commands/ConvertAccount": {
      "post": {
        "tags": [
          "Accounts"
        ],
        "operationId": "CreateConvertAccountCommand_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateConvertAccountCommandRequest"
            }
          },
          {
            "name": "AccountId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[Object]"
            }
          }
        }
      }
    },
    "/api/ReservationApplications/{ReservationApplicationId}/_commands/PerformCreditCheck": {
      "post": {
        "tags": [
          "ReservationApplication"
        ],
        "operationId": "CreateCreditCheckForReservationApplication_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateCreditCheckForReservationApplicationRequest"
            }
          },
          {
            "name": "ReservationApplicationId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[CreateCreditCheckForReservationApplicationResponse]"
            }
          }
        }
      }
    },
    "/api/Countries/{CountryCode}/CreditTemplates": {
      "get": {
        "tags": [
          "CreditTemplates"
        ],
        "operationId": "GetCreditTemplatesByCountry_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "CountryCode",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "onlyFallbackTemplates",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "forCompany",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "performedBy",
            "in": "query",
            "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          },
          {
            "name": "context",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[IEnumerable[GetCreditTemplateResponse]]"
            }
          }
        }
      },
      "post": {
        "tags": [
          "CreditTemplates"
        ],
        "operationId": "CreateCreditTemplate_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateCreditTemplateRequest"
            }
          },
          {
            "name": "CountryCode",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[Object]"
            }
          }
        }
      }
    },
    "/api/Accounts/{AccountId}/CreditTermsClassificationConsents": {
      "post": {
        "tags": [
          "Accounts"
        ],
        "operationId": "CreateCreditTermsClassificationConsentByAccountId_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateCreditTermsClassificationConsentByAccountIdRequest"
            }
          },
          {
            "name": "AccountId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[Object]"
            }
          }
        }
      }
    },
    "/api/Partners/{PartnerId}/CreditTemplates/{CreditTemplateId}/_commands/Deactivate": {
      "post": {
        "tags": [
          "CreditTemplates"
        ],
        "operationId": "CreateDeactivateCreditTemplateForMerchantCommand_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateDeactivateCreditTemplateForMerchantCommandRequest"
            }
          },
          {
            "name": "PartnerId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "CreditTemplateId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[Object]"
            }
          }
        }
      }
    },
    "/api/Accounts/{AccountId}/_commands/DebtCollectionExport": {
      "post": {
        "tags": [
          "Accounts"
        ],
        "operationId": "CreateDebtCollectionExportCommand_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateDebtCollectionExportCommandRequest"
            }
          },
          {
            "name": "AccountId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[Object]"
            }
          }
        }
      }
    },
    "/api/DefaultCreditTemplateConfigurations": {
      "post": {
        "tags": [
          "CreditTemplates"
        ],
        "operationId": "CreateDefaultCreditTemplateConfiguration_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateDefaultCreditTemplateConfigurationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[Object]"
            }
          }
        }
      }
    },
    "/api/Customers/{CustomerId}/Reservations/{PartnerId}/_commands/EvaluateStatus": {
      "post": {
        "tags": [
          "Reservations"
        ],
        "operationId": "CreateEvaluateReservationStatusCommand_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateEvaluateReservationStatusCommandRequest"
            }
          },
          {
            "name": "CustomerId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "PartnerId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[Object]"
            }
          }
        }
      }
    },
    "/api/Countries/{CountryCode}/FloatingInterestDefinitions": {
      "get": {
        "tags": [
          "Floating Interest"
        ],
        "operationId": "GetFloatingInterestDefinitions_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "CountryCode",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "performedBy",
            "in": "query",
            "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          },
          {
            "name": "context",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[GetFloatingInterestDefinitionsResponse]"
            }
          }
        }
      }
    },
    "/api/Countries/{CountryCode}/FloatingInterestDefinitions/{FloatingInterestDefinitionId}/Values": {
      "get": {
        "tags": [
          "Floating Interest"
        ],
        "operationId": "GetFloatingInterestValues_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "CountryCode",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "FloatingInterestDefinitionId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "performedBy",
            "in": "query",
            "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          },
          {
            "name": "context",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[GetFloatingInterestValuesResponse]"
            }
          }
        }
      }
    },
    "/api/Transactions/_commands/CreateKortaPayment": {
      "post": {
        "tags": [
          "Transactions"
        ],
        "operationId": "CreateKortaPaymentCommand_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateKortaPaymentCommandRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[CreateKortaPaymentCommandResponse]"
            }
          }
        }
      }
    },
    "/api/Transactions/_commands/CreateKortaRefund": {
      "post": {
        "tags": [
          "Transactions"
        ],
        "operationId": "CreateKortaRefundCommand_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateKortaRefundCommandRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[CreateKortaRefundCommandResponse]"
            }
          }
        }
      }
    },
    "/api/Payments": {
      "post": {
        "tags": [
          "Payments"
        ],
        "operationId": "CreatePayment_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreatePaymentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[CreatePaymentResponse]"
            }
          }
        }
      }
    },
    "/api/Customers/{CustomerId}/PreferredInvoiceAddress": {
      "get": {
        "tags": [
          "Customers"
        ],
        "operationId": "GetPreferredInvoiceAddress_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "CustomerId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "performedBy",
            "in": "query",
            "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          },
          {
            "name": "context",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[GetPreferredInvoiceAddressResponse]"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Customers"
        ],
        "operationId": "CreatePreferredInvoiceAddress_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreatePreferredInvoiceAddressRequest"
            }
          },
          {
            "name": "CustomerId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[Object]"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Customers"
        ],
        "operationId": "RemovePreferredInvoiceAddress_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "CustomerId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "performedBy",
            "in": "query",
            "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          },
          {
            "name": "context",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[Object]"
            }
          }
        }
      }
    },
    "/api/PendingInvoices/{pendingInvoiceId}/_commands/Reject": {
      "post": {
        "tags": [
          "PendingInvoices"
        ],
        "operationId": "CreateRejectPendingInvoiceCommand_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateRejectPendingInvoiceCommandRequest"
            }
          },
          {
            "name": "pendingInvoiceId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[Object]"
            }
          }
        }
      }
    },
    "/api/PendingInvoices/{pendingInvoiceId}/_commands/Release": {
      "post": {
        "tags": [
          "PendingInvoices"
        ],
        "operationId": "CreateReleasePendingInvoiceCommand_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateReleasePendingInvoiceCommandRequest"
            }
          },
          {
            "name": "pendingInvoiceId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[Object]"
            }
          }
        }
      }
    },
    "/api/Customers/{CustomerId}/Reservations/{PartnerId}": {
      "post": {
        "tags": [
          "Reservations"
        ],
        "operationId": "CreateReservation_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateReservationRequest"
            }
          },
          {
            "name": "CustomerId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "PartnerId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[Object]"
            }
          }
        }
      }
    },
    "/api/ReservationApplications": {
      "post": {
        "tags": [
          "ReservationApplication"
        ],
        "operationId": "CreateReservationApplication_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateReservationApplicationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[CreateReservationApplicationResponse]"
            }
          }
        }
      }
    },
    "/api/Rules": {
      "get": {
        "tags": [
          "Rules"
        ],
        "operationId": "GetRules_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "expandCriteria",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "performedBy",
            "in": "query",
            "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          },
          {
            "name": "context",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[IEnumerable[GetRuleResponse]]"
            }
          }
        }
      }
    },
    "/api/Rules/{RuleId}/Criteria": {
      "get": {
        "tags": [
          "Rules"
        ],
        "operationId": "GetRuleCriteria_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "RuleId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "performedBy",
            "in": "query",
            "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          },
          {
            "name": "context",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[IEnumerable[GetRuleCriterionResponse]]"
            }
          }
        }
      }
    },
    "/api/Customers/{CustomerId}/_commands/SetInvoiceRelatedEmails": {
      "post": {
        "tags": [
          "Customers"
        ],
        "operationId": "CreateSetCustomersInvoiceRelatedEmailsCommand_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateSetCustomersInvoiceRelatedEmailsCommandRequest"
            }
          },
          {
            "name": "CustomerId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[Object]"
            }
          }
        }
      }
    },
    "/api/Customers/{CustomerId}/_commands/SetInvoiceRelatedMobilePhones": {
      "post": {
        "tags": [
          "Customers"
        ],
        "operationId": "CreateSetCustomersInvoiceRelatedMobilePhonesCommand_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateSetCustomersInvoiceRelatedMobilePhonesCommandRequest"
            }
          },
          {
            "name": "CustomerId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[Object]"
            }
          }
        }
      }
    },
    "/api/Transactions/_commands/TransferBalance": {
      "post": {
        "tags": [
          "Transactions"
        ],
        "operationId": "CreateTransferBalanceCommand_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateTransferBalanceCommandRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[Object]"
            }
          }
        }
      }
    },
    "/api/Payments/SoldDebtPaymentsToProcess/{SoldDebtPaymentToProcessId}/_commands/TransferToBank": {
      "post": {
        "tags": [
          "Payments"
        ],
        "operationId": "CreateTransferToBankCommand_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateTransferToBankCommandRequest"
            }
          },
          {
            "name": "SoldDebtPaymentToProcessId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[Object]"
            }
          }
        }
      }
    },
    "/api/Accounts/{AccountId}/_commands/UpdateEmailAddress": {
      "post": {
        "tags": [
          "Accounts"
        ],
        "operationId": "CreateUpdateEmailAddressCommand_Post",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateUpdateEmailAddressCommandRequest"
            }
          },
          {
            "name": "AccountId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[Object]"
            }
          }
        }
      }
    },
    "/api/Accounts/{AccountId}/Details": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "operationId": "GetAccountDetails_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "AccountId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "performedBy",
            "in": "query",
            "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          },
          {
            "name": "context",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[GetAccountDetailsResponse]"
            }
          }
        }
      }
    },
    "/api/Customers/{CustomerId}/Accounts/MissingEmail": {
      "get": {
        "tags": [
          "Customers"
        ],
        "operationId": "GetAccountsWithMissingEmail_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "CustomerId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "hasSuppressNotificationDeliverySet",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "performedBy",
            "in": "query",
            "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          },
          {
            "name": "context",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[GetAccountsWithMissingEmailResponse]"
            }
          }
        }
      }
    },
    "/api/Accounts/{AccountId}/Transactions": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "operationId": "GetAccountTransactions_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "AccountId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "validForCreditNote",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "performedBy",
            "in": "query",
            "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          },
          {
            "name": "context",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[IEnumerable[GetAccountTransactionsResponse]]"
            }
          }
        }
      }
    },
    "/api/Accounts/{AccountId}/TransferInformation": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "operationId": "GetAccountTransferInformation_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "AccountId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "performedBy",
            "in": "query",
            "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          },
          {
            "name": "context",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[GetAccountTransferInformationResponse]"
            }
          }
        }
      }
    },
    "/api/Partners/{PartnerId}/AccountTypes": {
      "get": {
        "tags": [
          "Partners"
        ],
        "operationId": "GetAccountTypes_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "PartnerId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "performedBy",
            "in": "query",
            "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          },
          {
            "name": "context",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[IEnumerable[AccountTypeResponse]]"
            }
          }
        }
      }
    },
    "/api/Partners/{PartnerId}/AccountTypeSettings": {
      "get": {
        "tags": [
          "Partners"
        ],
        "operationId": "GetAccountTypeSettings_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "PartnerId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "performedBy",
            "in": "query",
            "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          },
          {
            "name": "context",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[GetAccountTypeSettingResponse]"
            }
          }
        }
      }
    },
    "/api/Customers/{CustomerId}/Accounts/Active": {
      "get": {
        "tags": [
          "Customers"
        ],
        "operationId": "GetActiveAccounts_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "CustomerId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "performedBy",
            "in": "query",
            "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          },
          {
            "name": "context",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[GetActiveAccountsResponse]"
            }
          }
        }
      }
    },
    "/api/Customers/{CustomerId}/ActiveFixedInstallmentAccounts": {
      "get": {
        "tags": [
          "Customers"
        ],
        "operationId": "GetActiveFixedInstallmentAccounts_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "CustomerId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "excludeNotifiedAccounts",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "performedBy",
            "in": "query",
            "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          },
          {
            "name": "context",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[IEnumerable[GetActiveFixedInstallmentAccountsResponse]]"
            }
          }
        }
      }
    },
    "/api/Customers/{CountryCode}/{RegistrationNumber}/Notifications/Active": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "operationId": "GetActiveNotifications_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "CountryCode",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "RegistrationNumber",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "performedBy",
            "in": "query",
            "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          },
          {
            "name": "context",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[IEnumerable[GetActiveNotificationsResponse]]"
            }
          }
        }
      }
    },
    "/api/Customers/{CustomerId}/Notifications/Active": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "operationId": "GetActiveNotificationsByCustomerId_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "CustomerId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "performedBy",
            "in": "query",
            "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          },
          {
            "name": "context",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[IEnumerable[GetActiveNotificationsByCustomerIdResponse]]"
            }
          }
        }
      }
    },
    "/api/Customers/{CustomerId}/AnnualInterestStatements/{Year}/PDF": {
      "get": {
        "tags": [
          "Customers"
        ],
        "operationId": "GetAnnualInterestStatementPdf_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "CustomerId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Year",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "performedBy",
            "in": "query",
            "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          },
          {
            "name": "context",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[Stream]"
            }
          }
        }
      }
    },
    "/api/Customers/{CountryCode}/{RegistrationNumber}/BlockedForPurchase": {
      "get": {
        "tags": [
          "Customers"
        ],
        "operationId": "GetBlockedForPurchase_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "CountryCode",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "RegistrationNumber",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerId",
            "in": "query",
            "description": "(PARTNER_ID_REQUIRED)",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "accountType",
            "in": "query",
            "description": "(ACCOUNTTYPE_IS_REQUIRED)",
            "required": true,
            "type": "string"
          },
          {
            "name": "performedBy",
            "in": "query",
            "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          },
          {
            "name": "context",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[GetBlockedForPurchaseResponse]"
            }
          }
        }
      }
    },
    "/api/cards/metadata/{purchaseIdentifier}": {
      "get": {
        "tags": [
          "Cards"
        ],
        "operationId": "GetCardMetadata_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "purchaseIdentifier",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "performedBy",
            "in": "query",
            "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          },
          {
            "name": "context",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[GetCardMetadataResponse]"
            }
          }
        }
      }
    },
    "/api/cards/reservations/{ReservationId}/transactions": {
      "get": {
        "tags": [
          "Cards"
        ],
        "operationId": "GetCardTransactions_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ReservationId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "Range: inclusive between 0 and 2147483647 (PAGE_INDEX_POSITIVE)",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 0
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Range: inclusive between 1 and 2147483647 (PAGE_SIZE_POSITIVE)",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 1
          },
          {
            "name": "performedBy",
            "in": "query",
            "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          },
          {
            "name": "context",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[PagedResponse[CardTransaction]]"
            }
          }
        }
      }
    },
    "/api/Customers/{CustomerId}/Commitments": {
      "get": {
        "tags": [
          "Customers"
        ],
        "operationId": "GetCommitments_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "CustomerId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "performedBy",
            "in": "query",
            "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          },
          {
            "name": "context",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[IEnumerable[GetCommitmentsResponse]]"
            }
          }
        }
      }
    },
    "/api/Customers/{CountryCode}/{RegistrationNumber}/CompanyInformation": {
      "get": {
        "tags": [
          "Customers"
        ],
        "operationId": "GetCompanyInformation_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "CountryCode",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "RegistrationNumber",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "performedBy",
            "in": "query",
            "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          },
          {
            "name": "context",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[IEnumerable[GetCompanyInformationResponse]]"
            }
          }
        }
      }
    },
    "/api/Accounts/{AccountId}/ConversionOptions": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "operationId": "GetConversionOptions_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "AccountId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "performedBy",
            "in": "query",
            "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          },
          {
            "name": "context",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[GetConversionOptionsResponse]"
            }
          }
        }
      }
    },
    "/api/Countries": {
      "get": {
        "tags": [
          "Countries"
        ],
        "operationId": "GetCountries_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "performedBy",
            "in": "query",
            "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          },
          {
            "name": "context",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[IEnumerable[GetCountryResponse]]"
            }
          }
        }
      }
    },
    "/api/CountrySettings/{CountryCode}": {
      "get": {
        "tags": [
          "Countries"
        ],
        "operationId": "GetCountrySetting_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "CountryCode",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "performedBy",
            "in": "query",
            "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          },
          {
            "name": "context",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[GetCountrySettingResponse]"
            }
          }
        }
      }
    },
    "/api/CreditCheckResult/{CreditCheckResultId}": {
      "get": {
        "tags": [
          "Customers"
        ],
        "operationId": "GetCreditCheckResult_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "CreditCheckResultId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "performedBy",
            "in": "query",
            "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          },
          {
            "name": "context",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[GetCreditCheckResultResponse]"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Customers"
        ],
        "operationId": "ModifyCreditCheckResult_Patch",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModifyCreditCheckResultRequest"
            }
          },
          {
            "name": "CreditCheckResultId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[Object]"
            }
          }
        }
      }
    },
    "/api/Countries/{CountryCode}/CreditServices": {
      "get": {
        "tags": [
          "CreditTemplates"
        ],
        "operationId": "GetCreditServicesByCountry_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "CountryCode",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "forCompany",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "performedBy",
            "in": "query",
            "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          },
          {
            "name": "context",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[IEnumerable[GetCreditServiceResponse]]"
            }
          }
        }
      }
    },
    "/api/Partners/{PartnerId}/CreditTemplates": {
      "get": {
        "tags": [
          "CreditTemplates"
        ],
        "operationId": "GetCreditTemplatesByPartner_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "PartnerId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "performedBy",
            "in": "query",
            "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          },
          {
            "name": "context",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[IEnumerable[GetCreditTemplateResponse]]"
            }
          }
        }
      }
    },
    "/api/CreditCheckResults/{CreditCheckResultId}/CreditValidationTemplate": {
      "get": {
        "tags": [
          "Customers"
        ],
        "operationId": "GetCreditValidationTemplate_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "CreditCheckResultId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "performedBy",
            "in": "query",
            "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          },
          {
            "name": "context",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[GetCreditValidationTemplateResponse]"
            }
          }
        }
      }
    },
    "/api/Customers/{CustomerId}": {
      "get": {
        "tags": [
          "Customers"
        ],
        "operationId": "GetCustomer_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "CustomerId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "performedBy",
            "in": "query",
            "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          },
          {
            "name": "context",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[GetCustomerResponse]"
            }
          }
        }
      }
    },
    "/api/Countries/{CountryCode}/Customers/{RegistrationNumber}": {
      "get": {
        "tags": [
          "Customers"
        ],
        "operationId": "GetCustomerByRegistrationNumber_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "CountryCode",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "RegistrationNumber",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "performedBy",
            "in": "query",
            "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          },
          {
            "name": "context",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[GetCustomerByRegistrationNumberResponse]"
            }
          }
        }
      }
    },
    "/api/Customers/{CustomerId}/Commitments/{PartnerId}/Proxies": {
      "get": {
        "tags": [
          "Customers"
        ],
        "operationId": "GetCustomerProxies_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "CustomerId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "PartnerId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "performedBy",
            "in": "query",
            "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          },
          {
            "name": "context",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[GetCustomerProxiesResponse]"
            }
          }
        }
      }
    },
    "/api/Customers/Email": {
      "get": {
        "tags": [
          "Customers"
        ],
        "operationId": "GetCustomersByEmail_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "(EMAIL_REQUIRED)<br/>Value must be a valid email. (EMAIL_INVALID)",
            "required": true,
            "type": "string"
          },
          {
            "name": "countryCode",
            "in": "query",
            "description": "(COUNTRY_CODE_REQUIRED)<br/>Value must be a country code according to the ISO 3166 format. (COUNTRY_CODE_INVALID)",
            "required": true,
            "type": "string"
          },
          {
            "name": "performedBy",
            "in": "query",
            "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          },
          {
            "name": "context",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[IEnumerable[CustomerData]]"
            }
          }
        }
      }
    },
    "/api/Countries/{CountryCode}/DefaultCreditTemplateConfigurations": {
      "get": {
        "tags": [
          "CreditTemplates"
        ],
        "operationId": "GetDefaultCreditTemplateConfigurationsByCountry_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "CountryCode",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "forCompany",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "performedBy",
            "in": "query",
            "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          },
          {
            "name": "context",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[IEnumerable[GetDefaultCreditTemplateConfigurationResponse]]"
            }
          }
        }
      }
    },
    "/api/Notifications/{NotificationId}/DueDateInformation": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "operationId": "GetDueDateInformation_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "NotificationId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "performedBy",
            "in": "query",
            "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          },
          {
            "name": "context",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[GetDueDateInformationResponse]"
            }
          }
        }
      }
    },
    "/api/Notification/PDF/External": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "operationId": "GetExternalNotificationPdf_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "payload",
            "in": "query",
            "description": "(PAYLOAD_IS_REQUIRED)",
            "required": true,
            "type": "string"
          },
          {
            "name": "performedBy",
            "in": "query",
            "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          },
          {
            "name": "context",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[Stream]"
            }
          }
        }
      }
    },
    "/api/Notifications/{NotificationId}/Documents/MainApplicant": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "operationId": "GetMainApplicantNotificationDocument_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "NotificationId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "performedBy",
            "in": "query",
            "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          },
          {
            "name": "context",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[NotificationExportOrderDocument]"
            }
          }
        }
      }
    },
    "/api/Notifications/{NotificationId}/Details": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "operationId": "GetNotificationDetails_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "NotificationId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "performedBy",
            "in": "query",
            "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          },
          {
            "name": "context",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[GetNotificationDetailsResponse]"
            }
          }
        }
      }
    },
    "/api/ExportOrders/{ExportOrderId}/Document": {
      "get": {
        "tags": [
          "Export Orders"
        ],
        "operationId": "GetNotificationDocumentByExportOrderId_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ExportOrderId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "performedBy",
            "in": "query",
            "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          },
          {
            "name": "context",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[NotificationExportOrderDocument]"
            }
          }
        }
      }
    },
    "/api/Notifications/{NotificationId}/Documents": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "operationId": "GetNotificationDocumentsByNotificationId_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "NotificationId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "performedBy",
            "in": "query",
            "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          },
          {
            "name": "context",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[IEnumerable[NotificationExportOrderDocument]]"
            }
          }
        }
      }
    },
    "/api/Customers/{CustomerId}/Notifications/History": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "operationId": "GetNotificationHistory_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "CustomerId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "(PAGE_SIZE_REQUIRED)<br/>Range: inclusive between 1 and 50 ()",
            "required": true,
            "type": "integer",
            "format": "int32",
            "maximum": 50,
            "minimum": 1
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "Range: inclusive between 0 and 2147483647 ()",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 0
          },
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "performedBy",
            "in": "query",
            "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          },
          {
            "name": "context",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[GetNotificationHistoryResponse]"
            }
          }
        }
      }
    },
    "/api/Notifications/{NotificationId}/PDF": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "operationId": "GetNotificationPdf_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "NotificationId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "performedBy",
            "in": "query",
            "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          },
          {
            "name": "context",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[Stream]"
            }
          }
        }
      }
    },
    "/api/Notifications/{NotificationId}/SecondaryApplicant/PDF": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "operationId": "GetNotificationPdfForSecondaryApplicant_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "NotificationId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "performedBy",
            "in": "query",
            "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          },
          {
            "name": "context",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[Stream]"
            }
          }
        }
      }
    },
    "/api/Partners/{PartnerId}": {
      "get": {
        "tags": [
          "Partners"
        ],
        "operationId": "GetPartner_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "PartnerId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "performedBy",
            "in": "query",
            "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          },
          {
            "name": "context",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[GetPartnerResponse]"
            }
          }
        }
      }
    },
    "/api/Partners/{PartnerId}/Agreement": {
      "get": {
        "tags": [
          "Partners"
        ],
        "operationId": "GetPartnerAgreement_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "PartnerId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "performedBy",
            "in": "query",
            "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          },
          {
            "name": "context",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[GetPartnerAgreementResponse]"
            }
          }
        }
      }
    },
    "/api/Partners/Names": {
      "get": {
        "tags": [
          "Partners"
        ],
        "operationId": "GetPartnersNames_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "performedBy",
            "in": "query",
            "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          },
          {
            "name": "context",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[GetPartnersNamesResponse]"
            }
          }
        }
      }
    },
    "/api/Accounts/{AccountId}/PendingCreditTransactions": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "operationId": "GetPendingCreditTransactions_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "AccountId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "performedBy",
            "in": "query",
            "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          },
          {
            "name": "context",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[IEnumerable[GetAccountTransactionsResponse]]"
            }
          }
        }
      }
    },
    "/api/PortalUsers/{Username}": {
      "get": {
        "tags": [
          "Portal Users"
        ],
        "operationId": "GetPortalUser_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Username",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "performedBy",
            "in": "query",
            "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          },
          {
            "name": "context",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[GetPortalUserResponse]"
            }
          }
        }
      }
    },
    "/api/Customers/{CustomerId}/PreferredInvoiceAddress/History": {
      "get": {
        "tags": [
          "Customers"
        ],
        "operationId": "GetPreferredInvoiceAddressHistory_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "CustomerId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "performedBy",
            "in": "query",
            "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          },
          {
            "name": "context",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[GetPreferredInvoiceAddressHistoryResponse]"
            }
          }
        }
      }
    },
    "/api/Accounts/{AccountId}/PrimaryEmailAddress": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "operationId": "GetPrimaryEmailAddressByAccountId_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "AccountId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "performedBy",
            "in": "query",
            "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          },
          {
            "name": "context",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[GetPrimaryEmailAddressByAccountIdResponse]"
            }
          }
        }
      }
    },
    "/api/Partners/{PartnerId}/Products": {
      "get": {
        "tags": [
          "Partners"
        ],
        "operationId": "GetProducts_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "PartnerId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "amount",
            "in": "query",
            "required": false,
            "type": "number",
            "format": "double"
          },
          {
            "name": "includeInternalProducts",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "performedBy",
            "in": "query",
            "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          },
          {
            "name": "context",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[GetProductsResponse]"
            }
          }
        }
      }
    },
    "/api/Transactions/{TransactionId}/PurchaseMetadata": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "operationId": "GetPurchaseMetadata_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "TransactionId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "performedBy",
            "in": "query",
            "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          },
          {
            "name": "context",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[GetPurchaseMetadataResponse]"
            }
          }
        }
      }
    },
    "/api/Reports/{ReportName}": {
      "get": {
        "tags": [
          "Reports"
        ],
        "operationId": "GetReport_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ReportName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "performedBy",
            "in": "query",
            "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          },
          {
            "name": "context",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[GetReportResponse]"
            }
          }
        }
      }
    },
    "/api/ReservationApplications/{ReservationApplicationId}": {
      "get": {
        "tags": [
          "ReservationApplication"
        ],
        "operationId": "GetReservationApplication_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ReservationApplicationId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "performedBy",
            "in": "query",
            "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          },
          {
            "name": "context",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[GetReservationApplicationResponse]"
            }
          }
        }
      }
    },
    "/api/Customers/{CustomerId}/Reservations": {
      "get": {
        "tags": [
          "Customers"
        ],
        "operationId": "GetReservations_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "CustomerId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "partnerId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "performedBy",
            "in": "query",
            "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          },
          {
            "name": "context",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[GetReservationsResponse]"
            }
          }
        }
      }
    },
    "/api/Rules/{RuleId}": {
      "get": {
        "tags": [
          "Rules"
        ],
        "operationId": "GetRule_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "RuleId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "expandCriteria",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "performedBy",
            "in": "query",
            "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          },
          {
            "name": "context",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[GetRuleResponse]"
            }
          }
        }
      }
    },
    "/api/Rules/{RuleId}/Criteria/{RuleCriterionId}": {
      "get": {
        "tags": [
          "Rules"
        ],
        "operationId": "GetRuleCriterion_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "RuleId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "RuleCriterionId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "performedBy",
            "in": "query",
            "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          },
          {
            "name": "context",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[GetRuleCriterionResponse]"
            }
          }
        }
      }
    },
    "/api/Accounts/{AccountId}/SecciSettings": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "operationId": "GetSecciSettingsByAccountId_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "AccountId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "performedBy",
            "in": "query",
            "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          },
          {
            "name": "context",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[GetSecciSettingsByAccountIdResponse]"
            }
          }
        }
      }
    },
    "/api/ServiceUsers/{Username}": {
      "get": {
        "tags": [
          "Service Users"
        ],
        "operationId": "GetServiceUser_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "Username",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "performedBy",
            "in": "query",
            "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          },
          {
            "name": "context",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[GetServiceUserResponse]"
            }
          }
        }
      }
    },
    "/api/SigningRequirements/{SigningRequirementId}": {
      "get": {
        "tags": [
          "Signing"
        ],
        "operationId": "GetSigningRequirement_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "SigningRequirementId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "performedBy",
            "in": "query",
            "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          },
          {
            "name": "context",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[GetSigningRequirementResponse]"
            }
          }
        }
      }
    },
    "/api/SigningRequirements/{SigningRequirementId}/PurchaseInformation": {
      "get": {
        "tags": [
          "Signing"
        ],
        "operationId": "GetSigningRequirementPurchaseInformation_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "SigningRequirementId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "performedBy",
            "in": "query",
            "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          },
          {
            "name": "context",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[GetSigningRequirementPurchaseInformationResponse]"
            }
          }
        }
      }
    },
    "/api/SigningRequirements/{SigningRequirementId}/ReservationInformation": {
      "get": {
        "tags": [
          "Signing"
        ],
        "operationId": "GetSigningRequirementReservationInformation_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "SigningRequirementId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "performedBy",
            "in": "query",
            "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          },
          {
            "name": "context",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[GetSigningRequirementReservationInformationResponse]"
            }
          }
        }
      }
    },
    "/api/SigningRequirements": {
      "get": {
        "tags": [
          "Signing"
        ],
        "operationId": "GetSigningRequirements_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "customerId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "registrationNumber",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "countryCode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "performedBy",
            "in": "query",
            "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          },
          {
            "name": "context",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[IEnumerable[GetSigningRequirementsResponse]]"
            }
          }
        }
      }
    },
    "/api/Payments/SoldDebtPaymentsToProcess": {
      "get": {
        "tags": [
          "Payments"
        ],
        "operationId": "GetSoldDebtPaymentsToProcess_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "paymentReference",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "amount",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startPeriod",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "endPeriod",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "countryCode",
            "in": "query",
            "description": "Value must be a country code according to the ISO 3166 format. (COUNTRY_CODE_INVALID)",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "Range: inclusive between 0 and 2147483647 ()",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 0
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Range: inclusive between 1 and 10000 ()",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 10000,
            "minimum": 1
          },
          {
            "name": "comment",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "performedBy",
            "in": "query",
            "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          },
          {
            "name": "context",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[GetSoldDebtPaymentsToProcessResponse]"
            }
          }
        }
      }
    },
    "/api/Payments/UnidentifiedPaymentsToProcess": {
      "get": {
        "tags": [
          "Payments"
        ],
        "operationId": "GetUnidentifiedPaymentsToProcess_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "paymentReference",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "amount",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "startPeriod",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "endPeriod",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "countryCode",
            "in": "query",
            "description": "Value must be a country code according to the ISO 3166 format. (COUNTRY_CODE_INVALID)",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageIndex",
            "in": "query",
            "description": "Range: inclusive between 0 and 2147483647 ()",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 2147483647,
            "minimum": 0
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Range: inclusive between 1 and 10000 ()",
            "required": false,
            "type": "integer",
            "format": "int32",
            "maximum": 10000,
            "minimum": 1
          },
          {
            "name": "comment",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "performedBy",
            "in": "query",
            "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          },
          {
            "name": "context",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[GetUnidentifiedPaymentsToProcessResponse]"
            }
          }
        }
      }
    },
    "/api/Accounts/{AccountId}/VisibleTransactions": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "operationId": "GetVisibleTransactions_Get",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "AccountId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "performedBy",
            "in": "query",
            "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          },
          {
            "name": "context",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[IEnumerable[GetAccountTransactionsResponse]]"
            }
          }
        }
      }
    },
    "/api/CreditTemplates/{CreditTemplateId}": {
      "put": {
        "tags": [
          "CreditTemplates"
        ],
        "operationId": "UpdateCreditTemplate_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateCreditTemplateRequest"
            }
          },
          {
            "name": "CreditTemplateId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[Object]"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CreditTemplates"
        ],
        "operationId": "RemoveCreditTemplate_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "CreditTemplateId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "performedBy",
            "in": "query",
            "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          },
          {
            "name": "context",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[Object]"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "CreditTemplates"
        ],
        "operationId": "ModifyCreditTemplate_Patch",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ModifyCreditTemplateRequest"
            }
          },
          {
            "name": "CreditTemplateId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[Object]"
            }
          }
        }
      }
    },
    "/api/DefaultCreditTemplateConfigurations/{DefaultCreditTemplateConfigurationId}": {
      "put": {
        "tags": [
          "CreditTemplates"
        ],
        "operationId": "UpdateDefaultCreditTemplateConfiguration_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateDefaultCreditTemplateConfigurationRequest"
            }
          },
          {
            "name": "DefaultCreditTemplateConfigurationId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[Object]"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "CreditTemplates"
        ],
        "operationId": "RemoveDefaultCreditTemplateConfiguration_Delete",
        "consumes": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "DefaultCreditTemplateConfigurationId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "performedBy",
            "in": "query",
            "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
            "required": true,
            "type": "string",
            "maxLength": 50,
            "minLength": 0
          },
          {
            "name": "context",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[Object]"
            }
          }
        }
      }
    },
    "/api/Accounts/{AccountId}/InvoiceAddress": {
      "put": {
        "tags": [
          "Accounts"
        ],
        "operationId": "UpdateInvoiceAddress_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateInvoiceAddressRequest"
            }
          },
          {
            "name": "AccountId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[Object]"
            }
          }
        }
      }
    },
    "/api/Customers/{CustomerId}/Reservations/{PartnerId}/Address": {
      "put": {
        "tags": [
          "Reservations"
        ],
        "operationId": "UpdateReservationAddress_Put",
        "consumes": [
          "application/json",
          "text/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateReservationAddressRequest"
            }
          },
          {
            "name": "CustomerId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "PartnerId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response[Object]"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "CreateActivateCardPurchaseRequest": {
      "required": [
        "FileId",
        "CurrencyCodeCHB",
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "FileId": {
          "description": "(FILE_ID_REQUIRED)<br/>String length: inclusive between 0 and 6 (FILE_ID_LENGTH)",
          "maxLength": 6,
          "minLength": 0,
          "type": "string"
        },
        "TransactionCode": {
          "description": "String length: inclusive between 0 and 2 (TRANSACTION_CODE_LENGTH)",
          "maxLength": 2,
          "minLength": 0,
          "type": "string"
        },
        "Sequence": {
          "format": "int32",
          "description": "Range: inclusive between 1 and 2147483647 (SEQUENCE_RANGE)",
          "maximum": 2147483647,
          "minimum": 1,
          "type": "integer"
        },
        "TransactionType": {
          "description": "String length: inclusive between 0 and 1 (TRANSACTION_TYPE_LENGTH)",
          "maxLength": 1,
          "minLength": 0,
          "type": "string"
        },
        "PurchaseDate": {
          "format": "date-time",
          "description": "Value must be a valid date-time. (PURCHASE_DATE_REQUIRED)",
          "type": "string"
        },
        "CurrencyCodeCHB": {
          "description": "(CURRENCY_CODE_CHB_REQUIRED)<br/>String length: inclusive between 0 and 3 (CURRENCY_CODE_CHB_LENGTH)",
          "maxLength": 3,
          "minLength": 0,
          "type": "string"
        },
        "AccountNo": {
          "format": "int64",
          "type": "integer"
        },
        "AmountCHB": {
          "format": "double",
          "description": "Value must be parsable to an sql-Decimal. (AMOUNT_CHB_PARSING)",
          "type": "number"
        },
        "TextCode": {
          "description": "String length: inclusive between 0 and 9 (TEXT_CODE_LENGTH)",
          "maxLength": 9,
          "minLength": 0,
          "type": "string"
        },
        "MaskedCardNo": {
          "description": "String length: inclusive between 0 and 19 (MASKED_CARD_NO_LENGTH)",
          "maxLength": 19,
          "minLength": 0,
          "type": "string"
        },
        "Microref": {
          "description": "String length: inclusive between 0 and 23 (MICROREF_LENGTH)",
          "maxLength": 23,
          "minLength": 0,
          "type": "string"
        },
        "AuthNo": {
          "description": "String length: inclusive between 0 and 6 (AUTH_NO_LENGTH)",
          "maxLength": 6,
          "minLength": 0,
          "type": "string"
        },
        "CurrencyCodeTransaction": {
          "description": "String length: inclusive between 0 and 3 (CURRENCY_CODE_TRANSACTION_LENGTH)",
          "maxLength": 3,
          "minLength": 0,
          "type": "string"
        },
        "AmountTransaction": {
          "format": "double",
          "description": "Value must be parsable to an sql-Decimal. (AMOUNT_TRANSACTION_PARSING)",
          "type": "number"
        },
        "MerchantName": {
          "description": "String length: inclusive between 0 and 25 (MERCHANT_NAME_LENGTH)",
          "maxLength": 25,
          "minLength": 0,
          "type": "string"
        },
        "MerchantCity": {
          "description": "String length: inclusive between 0 and 13 (MERCHANT_CITY_LENGTH)",
          "maxLength": 13,
          "minLength": 0,
          "type": "string"
        },
        "MerchantCountryCode": {
          "description": "String length: inclusive between 0 and 3 (MERCHANT_COUNTRY_CODE_LENGTH)",
          "maxLength": 3,
          "minLength": 0,
          "type": "string"
        },
        "MerchantCategoryCode": {
          "description": "String length: inclusive between 0 and 4 (MERCHANT_CATEGORY_CODE_LENGTH)",
          "maxLength": 4,
          "minLength": 0,
          "type": "string"
        },
        "AID": {
          "description": "String length: inclusive between 0 and 11 (ACQUIRER_INSTITUTION_CODE_LENGTH)",
          "maxLength": 11,
          "minLength": 0,
          "type": "string"
        },
        "AcceptorId": {
          "description": "String length: inclusive between 0 and 11 (ACCEPTOR_ID_LENGTH)",
          "maxLength": 11,
          "minLength": 0,
          "type": "string"
        },
        "TerminalId": {
          "description": "String length: inclusive between 0 and 11 (TERMINAL_ID_LENGTH)",
          "maxLength": 11,
          "minLength": 0,
          "type": "string"
        },
        "SettlementType": {
          "description": "String length: inclusive between 0 and 1 (SETTLEMENT_TYPE_LENGTH)",
          "maxLength": 1,
          "minLength": 0,
          "type": "string"
        },
        "CurrencyRate": {
          "format": "double",
          "description": "Value must be parsable to an sql-Decimal. (CURRENCY_RATE_PARSING)",
          "type": "number"
        },
        "FxFeeAmount": {
          "description": "String length: inclusive between 0 and 14 (FX_FEE_AMOUNT_LENGTH)",
          "maxLength": 14,
          "minLength": 0,
          "type": "string"
        },
        "CTTA": {
          "format": "double",
          "description": "Value must be parsable to an sql-Decimal. (CTTA_PARSING)",
          "type": "number"
        },
        "CSTA": {
          "format": "double",
          "description": "Value must be parsable to an sql-Decimal. (CSTA_PARSING)",
          "type": "number"
        },
        "CTTAUL": {
          "format": "double",
          "description": "Value must be parsable to an sql-Decimal. (CTTAUL_PARSING)",
          "type": "number"
        },
        "PosEntryMode": {
          "description": "String length: inclusive between 0 and 4 (POINT_OF_SERVICE_ENTRY_MODE_LENGTH)",
          "maxLength": 4,
          "minLength": 0,
          "type": "string"
        },
        "TransactionCategory": {
          "description": "String length: inclusive between 0 and 6 (TRANSACTION_CATEGORY_LENGTH)",
          "maxLength": 6,
          "minLength": 0,
          "type": "string"
        },
        "IDD_ID": {
          "format": "int32",
          "type": "integer"
        },
        "ATC": {
          "format": "int32",
          "type": "integer"
        },
        "PSN": {
          "description": "String length: inclusive between 0 and 3 (PAN_SEQUENCE_NUMBER)",
          "maxLength": 3,
          "minLength": 0,
          "type": "string"
        },
        "CardId": {
          "description": "String length: inclusive between 0 and 15 (CARD_ID_LENGTH)",
          "maxLength": 15,
          "minLength": 0,
          "type": "string"
        },
        "CardIdVersionNumber": {
          "description": "String length: inclusive between 0 and 9 (CARD_ID_VERSION_NUMBER)",
          "maxLength": 9,
          "minLength": 0,
          "type": "string"
        },
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "Response[Object]": {
      "type": "object",
      "properties": {
        "ApiVersion": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        },
        "Data": {
          "type": "object"
        },
        "Error": {
          "$ref": "#/definitions/Error"
        },
        "CorrelationId": {
          "type": "string"
        }
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "Code": {
          "type": "string"
        },
        "Message": {
          "type": "string"
        },
        "Errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorInfo"
          }
        }
      }
    },
    "ErrorInfo": {
      "type": "object",
      "properties": {
        "Message": {
          "type": "string"
        },
        "Reason": {
          "type": "string"
        }
      }
    },
    "CreateActivateCreditTemplateForMerchantCommandRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "CreateAntiFraudCallbackCommandRequest": {
      "required": [
        "PurchaseIdentifier",
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PurchaseIdentifier": {
          "description": "(PURCHASE_IDENTIFIER_REQUIRED)",
          "type": "string"
        },
        "Cause": {
          "type": "string"
        },
        "IsApproved": {
          "default": false,
          "type": "boolean"
        },
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "CreateArchiveCommandRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "CreateCardTransactionRequest": {
      "required": [
        "TransactionType",
        "Reference",
        "Metadata",
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "AccountNo": {
          "format": "int64",
          "type": "integer"
        },
        "TransactionType": {
          "description": "(TRANSACTION_TYPE_IS_REQUIRED)<br/>Value must be in the set: [AdditionalCardFee, AnnualFee, CashWithdrawalFee, DebtCollectionFee, InterestFee, NotificationFee, OriginationFee, OverdraftFee, PenaltyFee, PenaltyInterestFee, ReminderFee, ReplacementCardFee, WrappCashback] (TRANSACTION_TYPE_IS_NOT_ALLOWED)",
          "type": "string"
        },
        "Amount": {
          "format": "double",
          "description": "(AMOUNT_RANGE)<br/>Value must be parsable to a decimal. (AMOUNT_PARSING)",
          "type": "number"
        },
        "Reference": {
          "description": "(REFERENCE_MISSING)<br/>String length: inclusive between 0 and 255 (REFERENCE_LENGTH)",
          "maxLength": 255,
          "minLength": 0,
          "type": "string"
        },
        "InternalComment": {
          "description": "String length: inclusive between 0 and 50 (INTERNAL_COMMENT_IS_TOO_LONG)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Metadata": {
          "$ref": "#/definitions/CardTransactionMetadata",
          "description": "(METADATA_IS_REQUIRED)"
        },
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "CardTransactionMetadata": {
      "required": [
        "FileId",
        "CurrencyCodeFee"
      ],
      "type": "object",
      "properties": {
        "TransactionCode": {
          "description": "String length: inclusive between 0 and 2 (TRANSACTION_CODE_LENGTH)",
          "maxLength": 2,
          "minLength": 0,
          "type": "string"
        },
        "FileId": {
          "description": "(FILE_ID_REQUIRED)<br/>String length: inclusive between 0 and 6 (FILE_ID_LENGTH)",
          "maxLength": 6,
          "minLength": 0,
          "type": "string"
        },
        "Sequence": {
          "format": "int32",
          "description": "Range: inclusive between 1 and 2147483647 (SEQUENCE_RANGE)",
          "maximum": 2147483647,
          "minimum": 1,
          "type": "integer"
        },
        "TransactionType": {
          "description": "String length: inclusive between 0 and 1 (TRANSACTION_TYPE_LENGTH)",
          "maxLength": 1,
          "minLength": 0,
          "type": "string"
        },
        "ProcessingDate": {
          "format": "date-time",
          "description": "Value must be a valid date-time. (PROCESSING_DATE_REQUIRED)",
          "type": "string"
        },
        "CurrencyCodeFee": {
          "description": "(CURRENCY_CODE_FEE_REQUIRED)<br/>String length: inclusive between 0 and 3 (CURRENCY_CODE_FEE_LENGTH)",
          "maxLength": 3,
          "minLength": 0,
          "type": "string"
        },
        "FeeAmount": {
          "format": "double",
          "description": "Value must be parsable to an sql-Decimal. (FEE_AMOUNT_PARSING)",
          "type": "number"
        },
        "TextCode": {
          "description": "String length: inclusive between 0 and 9 (TEXT_CODE_LENGTH)",
          "maxLength": 9,
          "minLength": 0,
          "type": "string"
        },
        "CardNumber": {
          "description": "String length: inclusive between 0 and 19 (CARD_NUMBER_LENGTH)",
          "maxLength": 19,
          "minLength": 0,
          "type": "string"
        },
        "OriginalTransactionAmount": {
          "format": "double",
          "description": "Value must be parsable to an sql-Decimal. (ORIGINAL_TRANSACTION_AMOUNT_PARSING)",
          "type": "number"
        },
        "CurrencyCode": {
          "description": "String length: inclusive between 0 and 3 (CURRENCY_CODE_LENGTH)",
          "maxLength": 3,
          "minLength": 0,
          "type": "string"
        },
        "MerchantName": {
          "description": "String length: inclusive between 0 and 25 (MERCHANT_NAME_LENGTH)",
          "maxLength": 25,
          "minLength": 0,
          "type": "string"
        },
        "City": {
          "description": "String length: inclusive between 0 and 13 (CITY_LENGTH)",
          "maxLength": 13,
          "minLength": 0,
          "type": "string"
        },
        "CountryCode": {
          "description": "String length: inclusive between 0 and 3 (COUNTRY_CODE_LENGTH)",
          "maxLength": 3,
          "minLength": 0,
          "type": "string"
        },
        "MCC": {
          "description": "String length: inclusive between 0 and 4 (MERCHANT_CATEGORY_CODE_LENGTH)",
          "maxLength": 4,
          "minLength": 0,
          "type": "string"
        },
        "PSN": {
          "description": "String length: inclusive between 0 and 3 (PAN_SEQUENCE_NUMBER_LENGTH)",
          "maxLength": 3,
          "minLength": 0,
          "type": "string"
        },
        "CardId": {
          "description": "String length: inclusive between 0 and 15 (CARD_ID_LENGTH)",
          "maxLength": 15,
          "minLength": 0,
          "type": "string"
        },
        "CardIdVerNo": {
          "description": "String length: inclusive between 0 and 9 (CARD_ID_VERSION_NUMBER_LENGTH)",
          "maxLength": 9,
          "minLength": 0,
          "type": "string"
        },
        "CashbackTransactionId": {
          "description": "String length: inclusive between 0 and 50 (CASHBACK_TRANSACTION_ID_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "CreateCardTransactionSetNotificationDateCommandRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "NotificationDate": {
          "format": "date-time",
          "type": "string"
        },
        "PartnerId": {
          "format": "int32",
          "type": "integer"
        },
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "Response[CreateCardTransactionSetNotificationDateCommandResponse]": {
      "type": "object",
      "properties": {
        "ApiVersion": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        },
        "Data": {
          "$ref": "#/definitions/CreateCardTransactionSetNotificationDateCommandResponse"
        },
        "Error": {
          "$ref": "#/definitions/Error"
        },
        "CorrelationId": {
          "type": "string"
        }
      }
    },
    "CreateCardTransactionSetNotificationDateCommandResponse": {
      "type": "object",
      "properties": {
        "TransactionId": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "CreateClonePartnerCommandRequest": {
      "required": [
        "PartnerName",
        "GroupName",
        "CorporateIdNo",
        "InvoiceAddressLine1",
        "InvoicePostalCode",
        "InvoiceCity",
        "InvoiceCountryName",
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PartnerName": {
          "description": "(MERCHANT_NAME_REQUIRED)<br/>String length: inclusive between 0 and 255 (MERCHANT_NAME_LENGTH)",
          "maxLength": 255,
          "minLength": 0,
          "type": "string"
        },
        "GroupName": {
          "description": "(GROUP_NAME_REQUIRED)<br/>String length: inclusive between 0 and 100 (GROUP_NAME_LENGTH)",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "PhoneNumber": {
          "description": "String length: inclusive between 0 and 50 (PHONE_NUMBER_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Email": {
          "description": "String length: inclusive between 0 and 50 (EMAIL_LENGTH)<br/>Value must be a valid email. (EMAIL_INVALID)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Url": {
          "description": "String length: inclusive between 0 and 50 (URL_LENGTH)<br/>Value must be a valid Url (or null or empty string). (URL_INVALID)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "OpeningHours": {
          "description": "String length: inclusive between 0 and 50 (OPENING_HOURS_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "CorporateIdNo": {
          "description": "(CORPORATE_ID_REQUIRED)<br/>String length: inclusive between 0 and 50 (CORPORATE_ID_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "VatCountryCode": {
          "description": "String length: inclusive between 0 and 2 (VAT_COUNTRY_CODE_LENGTH)",
          "maxLength": 2,
          "minLength": 0,
          "type": "string"
        },
        "EndCustomerVatRegCode": {
          "description": "String length: inclusive between 0 and 50 (END_CUSTOMER_VAT_REG_CODE_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "MerchantVatRegCode": {
          "description": "String length: inclusive between 0 and 50 (MERCHANT_VAT_REG_CODE_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "InternalName": {
          "description": "String length: inclusive between 0 and 50 (INTERNAL_NAME_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "InvoiceAddressLine1": {
          "description": "(INVOICE_ADDRESS_REQUIRED)<br/>String length: inclusive between 0 and 50 (ADDRESS1_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "InvoiceAddressLine2": {
          "description": "String length: inclusive between 0 and 50 (ADDRESS2_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "InvoicePostalCode": {
          "description": "(POSTAL_CODE_REQUIRED)<br/>String length: inclusive between 0 and 20 (POSTAL_CODE_LENGTH)",
          "maxLength": 20,
          "minLength": 0,
          "type": "string"
        },
        "InvoiceCity": {
          "description": "(CITY_REQUIRED)<br/>String length: inclusive between 0 and 50 (CITY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "InvoiceCountryName": {
          "description": "(COUNTRY_NAME_REQUIRED)<br/>String length: inclusive between 0 and 64 (COUNTRY_NAME_LENGTH)",
          "maxLength": 64,
          "minLength": 0,
          "type": "string"
        },
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "Response[CreateClonePartnerCommandResponse]": {
      "type": "object",
      "properties": {
        "ApiVersion": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        },
        "Data": {
          "$ref": "#/definitions/CreateClonePartnerCommandResponse"
        },
        "Error": {
          "$ref": "#/definitions/Error"
        },
        "CorrelationId": {
          "type": "string"
        }
      }
    },
    "CreateClonePartnerCommandResponse": {
      "type": "object",
      "properties": {
        "CreatedPartnerId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "CreateCompleteReservationApplicationCommandRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "Response[CreateCompleteReservationApplicationCommandResponse]": {
      "type": "object",
      "properties": {
        "ApiVersion": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        },
        "Data": {
          "$ref": "#/definitions/CreateCompleteReservationApplicationCommandResponse"
        },
        "Error": {
          "$ref": "#/definitions/Error"
        },
        "CorrelationId": {
          "type": "string"
        }
      }
    },
    "CreateCompleteReservationApplicationCommandResponse": {
      "type": "object",
      "properties": {
        "ReservationId": {
          "format": "int64",
          "type": "integer"
        },
        "ApplicationStatus": {
          "type": "string"
        }
      }
    },
    "CreateCompleteSigningCommandRequest": {
      "required": [
        "PerformedFrom",
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PerformedFrom": {
          "description": "(PERFORMED_FROM_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_FROM_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "CreateConvertAccountCommandRequest": {
      "required": [
        "TargetAccountType",
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "TargetAccountType": {
          "description": "(ACCOUNTTYPE_IS_REQUIRED)<br/>Value must be in the set: [CreditAccount, AnnuityAccount, InterestFreeAccount] (ACCOUNTTYPE_INVALID)",
          "type": "string"
        },
        "ProductCode": {
          "type": "string"
        },
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "CreateCreditCheckForReservationApplicationRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "Response[CreateCreditCheckForReservationApplicationResponse]": {
      "type": "object",
      "properties": {
        "ApiVersion": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        },
        "Data": {
          "$ref": "#/definitions/CreateCreditCheckForReservationApplicationResponse"
        },
        "Error": {
          "$ref": "#/definitions/Error"
        },
        "CorrelationId": {
          "type": "string"
        }
      }
    },
    "CreateCreditCheckForReservationApplicationResponse": {
      "type": "object",
      "properties": {
        "IsApproved": {
          "default": false,
          "type": "boolean"
        },
        "ApprovedAmount": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "CreateCreditNoteCommandRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "AccountId": {
          "format": "int64",
          "type": "integer"
        },
        "TransactionIds": {
          "type": "array",
          "items": {
            "format": "int64",
            "type": "integer"
          }
        },
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "Response[CreateCreditNoteCommandResponse]": {
      "type": "object",
      "properties": {
        "ApiVersion": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        },
        "Data": {
          "$ref": "#/definitions/CreateCreditNoteCommandResponse"
        },
        "Error": {
          "$ref": "#/definitions/Error"
        },
        "CorrelationId": {
          "type": "string"
        }
      }
    },
    "CreateCreditNoteCommandResponse": {
      "type": "object",
      "properties": {
        "NotificationId": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "CreateCreditNoteExportOrderCommandRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "CreateCreditTemplateRequest": {
      "required": [
        "CreditValidationStrategy",
        "TemplateCode",
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "CreditLimit": {
          "format": "int32",
          "description": "(CREDIT_LIMIT_RANGE)",
          "maximum": 2147483647,
          "minimum": 0,
          "type": "integer"
        },
        "CreditServiceId": {
          "format": "int32",
          "type": "integer"
        },
        "CreditValidationStrategy": {
          "description": "Value must be in the set: [Scoring, TargetRegistrationNumbers, ProviderRegistrationNumbers, NationalRegistrationNumbers, ExternalScoring] (CREDIT_VALIDATION_STRATEGY_INVALID)<br/>(CREDIT_VALIDATION_STRATEGY_REQUIRED)",
          "type": "string"
        },
        "CutOffScore": {
          "format": "int32",
          "description": "(CUTOFF_SCORE_RANGE)",
          "maximum": 2147483647,
          "minimum": 0,
          "type": "integer"
        },
        "CustomerCode": {
          "description": "String length: inclusive between 0 and 50 (CUSTOMER_CODE_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "FallbackTemplateId": {
          "format": "int32",
          "type": "integer"
        },
        "InternalScore": {
          "format": "int32",
          "description": "(INTERNAL_SCORE_RANGE)",
          "maximum": 2147483647,
          "minimum": 0,
          "type": "integer"
        },
        "PrimaryUsername": {
          "description": "String length: inclusive between 0 and 50 (PRIMARY_USERNAME_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "PrimaryPassword": {
          "description": "String length: inclusive between 0 and 50 (PRIMARY_PASSWORD_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "ScoringModelName": {
          "description": "String length: inclusive between 0 and 30 (SCORING_MODEL_NAME_LENGTH)",
          "maxLength": 30,
          "minLength": 0,
          "type": "string"
        },
        "TemplateCode": {
          "description": "(TEMPLATE_CODE_REQUIRED)<br/>String length: inclusive between 0 and 50 (TEMPLATE_CODE_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "GetCreditTemplatesByCountryRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "OnlyFallbackTemplates": {
          "default": false,
          "type": "boolean"
        },
        "ForCompany": {
          "default": false,
          "type": "boolean"
        },
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "Response[IEnumerable[GetCreditTemplateResponse]]": {
      "type": "object",
      "properties": {
        "ApiVersion": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        },
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetCreditTemplateResponse"
          }
        },
        "Error": {
          "$ref": "#/definitions/Error"
        },
        "CorrelationId": {
          "type": "string"
        }
      }
    },
    "GetCreditTemplateResponse": {
      "type": "object",
      "properties": {
        "CreditLimit": {
          "format": "int32",
          "type": "integer"
        },
        "CreditTemplateId": {
          "format": "int32",
          "type": "integer"
        },
        "CreditService": {
          "$ref": "#/definitions/CreditService"
        },
        "CustomerCode": {
          "type": "string"
        },
        "CutoffScore": {
          "format": "int32",
          "type": "integer"
        },
        "FallbackTemplate": {
          "$ref": "#/definitions/FallbackTemplate"
        },
        "InternalScore": {
          "format": "int32",
          "type": "integer"
        },
        "IsDefault": {
          "default": false,
          "type": "boolean"
        },
        "IsFallbackTemplate": {
          "default": false,
          "type": "boolean"
        },
        "PrimaryPassword": {
          "type": "string"
        },
        "PrimaryUsername": {
          "type": "string"
        },
        "ScoringModelName": {
          "type": "string"
        },
        "ScoringModelVersion": {
          "format": "int32",
          "type": "integer"
        },
        "CreditValidationStrategy": {
          "type": "string"
        },
        "TemplateCode": {
          "type": "string"
        }
      }
    },
    "CreditService": {
      "type": "object",
      "properties": {
        "CreditValidationServiceId": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "TypeName": {
          "type": "string"
        },
        "UserId": {
          "type": "string"
        },
        "ForCompany": {
          "default": false,
          "type": "boolean"
        },
        "CountryCode": {
          "type": "string"
        },
        "UsesCustomerCode": {
          "default": false,
          "type": "boolean"
        },
        "UsesCustomerCodeOwner": {
          "default": false,
          "type": "boolean"
        },
        "UsesCustomerPassword": {
          "default": false,
          "type": "boolean"
        },
        "UsesInternalScore": {
          "default": false,
          "type": "boolean"
        },
        "UsesScoringModelName": {
          "default": false,
          "type": "boolean"
        }
      }
    },
    "FallbackTemplate": {
      "type": "object",
      "properties": {
        "CreditValidationTemplateId": {
          "format": "int32",
          "type": "integer"
        },
        "TemplateCode": {
          "type": "string"
        }
      }
    },
    "CreateCreditTermsClassificationConsentByAccountIdRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PerformedFrom": {
          "description": "String length: inclusive between 0 and 50 (PERFORMED_FROM_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "CreateDeactivateCreditTemplateForMerchantCommandRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "CreateDebtCollectionExportCommandRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "CreateDefaultCreditTemplateConfigurationRequest": {
      "required": [
        "CountryCode",
        "CreditValidationStrategy",
        "TemplateCode",
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "CreditServiceId": {
          "format": "int32",
          "type": "integer"
        },
        "CreditLimit": {
          "format": "int32",
          "description": "(CREDIT_LIMIT_RANGE)",
          "maximum": 2147483647,
          "minimum": 0,
          "type": "integer"
        },
        "DefaultCutoffScore": {
          "format": "int32",
          "description": "(DEFAULT_CUTOFF_SCORE_RANGE)",
          "maximum": 2147483647,
          "minimum": 0,
          "type": "integer"
        },
        "DefaultInternalScore": {
          "format": "int32",
          "description": "(DEFAULT_INTERNAL_SCORE_RANGE)",
          "maximum": 2147483647,
          "minimum": 0,
          "type": "integer"
        },
        "DefaultScoringModelName": {
          "description": "String length: inclusive between 0 and 30 (DEFAULT_SCORING_MODEL_NAME_LENGTH)",
          "maxLength": 30,
          "minLength": 0,
          "type": "string"
        },
        "CountryCode": {
          "description": "String length: inclusive between 0 and 2 (COUNTRY_CODE_LENGTH)<br/>(COUNTRY_CODE_REQUIRED)<br/>Value must be a country code according to the ISO 3166 format. (COUNTRY_CODE_INVALID)",
          "maxLength": 2,
          "minLength": 0,
          "type": "string"
        },
        "FallbackTemplateId": {
          "format": "int32",
          "type": "integer"
        },
        "CreditValidationStrategy": {
          "description": "Value must be in the set: [Scoring, TargetRegistrationNumbers, ProviderRegistrationNumbers, NationalRegistrationNumbers, ExternalScoring] (CREDIT_VALIDATION_STRATEGY_INVALID)<br/>(CREDIT_VALIDATION_STRATEGY_REQUIRED)",
          "type": "string"
        },
        "TemplateCode": {
          "description": "(TEMPLATE_CODE_REQUIRED)<br/>String length: inclusive between 0 and 255 (TEMPLATE_CODE_LENGTH)",
          "maxLength": 255,
          "minLength": 0,
          "type": "string"
        },
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "CreateEvaluateReservationStatusCommandRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "ExpectedReservationValidUntil": {
          "format": "date-time",
          "type": "string"
        },
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "CreateExtendDueDateCommandRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "Response[CreateExtendDueDateCommandResponse]": {
      "type": "object",
      "properties": {
        "ApiVersion": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        },
        "Data": {
          "$ref": "#/definitions/CreateExtendDueDateCommandResponse"
        },
        "Error": {
          "$ref": "#/definitions/Error"
        },
        "CorrelationId": {
          "type": "string"
        }
      }
    },
    "CreateExtendDueDateCommandResponse": {
      "type": "object",
      "properties": {
        "NewExtendedDueDate": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "CreateFloatingInterestDefinitionRequest": {
      "required": [
        "ShortName",
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "ShortName": {
          "description": "(SHORT_NAME_REQUIRED)<br/>Max length: 15 (SHORT_NAME_LENGTH)",
          "maxLength": 15,
          "type": "string"
        },
        "FriendlyName": {
          "description": "Max length: 50 (FRIENDLY_NAME_LENGTH)",
          "maxLength": 50,
          "type": "string"
        },
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "GetFloatingInterestDefinitionsRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "Response[GetFloatingInterestDefinitionsResponse]": {
      "type": "object",
      "properties": {
        "ApiVersion": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        },
        "Data": {
          "$ref": "#/definitions/GetFloatingInterestDefinitionsResponse"
        },
        "Error": {
          "$ref": "#/definitions/Error"
        },
        "CorrelationId": {
          "type": "string"
        }
      }
    },
    "GetFloatingInterestDefinitionsResponse": {
      "type": "object",
      "properties": {
        "FloatingInterestDefinitions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FloatingInterestDefinition"
          }
        }
      }
    },
    "FloatingInterestDefinition": {
      "type": "object",
      "properties": {
        "FloatingInterestDefinitionId": {
          "format": "uuid",
          "type": "string"
        },
        "CountryCode": {
          "type": "string"
        },
        "ShortName": {
          "type": "string"
        },
        "FriendlyName": {
          "type": "string"
        }
      }
    },
    "CreateFloatingInterestValueRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "ValidFrom": {
          "format": "date-time",
          "type": "string"
        },
        "BaseInterestRate": {
          "format": "double",
          "type": "number"
        },
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "GetFloatingInterestValuesRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "Response[GetFloatingInterestValuesResponse]": {
      "type": "object",
      "properties": {
        "ApiVersion": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        },
        "Data": {
          "$ref": "#/definitions/GetFloatingInterestValuesResponse"
        },
        "Error": {
          "$ref": "#/definitions/Error"
        },
        "CorrelationId": {
          "type": "string"
        }
      }
    },
    "GetFloatingInterestValuesResponse": {
      "type": "object",
      "properties": {
        "FloatingInterestValues": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FloatingInterestValue"
          }
        }
      }
    },
    "FloatingInterestValue": {
      "type": "object",
      "properties": {
        "FloatingInterestValueId": {
          "format": "uuid",
          "type": "string"
        },
        "FloatingInterestDefinition": {
          "$ref": "#/definitions/FloatingInterestDefinition"
        },
        "ValidFrom": {
          "format": "date-time",
          "type": "string"
        },
        "BaseInterestRate": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "CreateIdentifyPaymentCommandRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "UnidentifiedPaymentToProcessId": {
          "format": "int64",
          "type": "integer"
        },
        "PaymentReference": {
          "type": "string"
        },
        "CurrencyCode": {
          "type": "string"
        },
        "InternalComment": {
          "type": "string"
        },
        "Reference": {
          "type": "string"
        },
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "CreateKortaPaymentCommandRequest": {
      "required": [
        "AccountingDate",
        "CurrencyCode",
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "AccountId": {
          "format": "int64",
          "type": "integer"
        },
        "PendingInvoiceId": {
          "format": "int64",
          "type": "integer"
        },
        "Amount": {
          "format": "double",
          "description": "Range: inclusive between 0,01 and 1E+16 (AMOUNT_RANGE)<br/>Value must be parsable to a decimal. (AMOUNT_PARSING)",
          "type": "number"
        },
        "AccountingDate": {
          "format": "date-time",
          "description": "(ACCOUNTING_DATE_IS_REQUIRED)<br/>Value must be a valid date-time. (ACCOUNTING_DATE_IS_INVALID)",
          "type": "string"
        },
        "CurrencyCode": {
          "description": "(CURRENCY_CODE_IS_REQUIRED)<br/>Value must be a currency code according to the ISO 4217 format. (CURRENCY_INVALID)",
          "type": "string"
        },
        "FileName": {
          "description": "String length: inclusive between 0 and 255 (FILENAME_LENGTH)",
          "maxLength": 255,
          "minLength": 0,
          "type": "string"
        },
        "Metadata": {
          "type": "string"
        },
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "Response[CreateKortaPaymentCommandResponse]": {
      "type": "object",
      "properties": {
        "ApiVersion": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        },
        "Data": {
          "$ref": "#/definitions/CreateKortaPaymentCommandResponse"
        },
        "Error": {
          "$ref": "#/definitions/Error"
        },
        "CorrelationId": {
          "type": "string"
        }
      }
    },
    "CreateKortaPaymentCommandResponse": {
      "type": "object",
      "properties": {
        "AccountId": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "CreateKortaRefundCommandRequest": {
      "required": [
        "AccountingDate",
        "CurrencyCode",
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "AccountId": {
          "format": "int64",
          "type": "integer"
        },
        "PendingInvoiceId": {
          "format": "int64",
          "type": "integer"
        },
        "Amount": {
          "format": "double",
          "description": "Range: inclusive between 0,01 and 1E+16 (AMOUNT_RANGE)<br/>Value must be parsable to a decimal. (AMOUNT_PARSING)",
          "type": "number"
        },
        "AccountingDate": {
          "format": "date-time",
          "description": "(ACCOUNTING_DATE_IS_REQUIRED)<br/>Value must be a valid date-time. (ACCOUNTING_DATE_IS_INVALID)",
          "type": "string"
        },
        "CurrencyCode": {
          "description": "(CURRENCY_CODE_IS_REQUIRED)<br/>Value must be a currency code according to the ISO 4217 format. (CURRENCY_INVALID)",
          "type": "string"
        },
        "FileName": {
          "description": "String length: inclusive between 0 and 255 (FILENAME_LENGTH)",
          "maxLength": 255,
          "minLength": 0,
          "type": "string"
        },
        "Metadata": {
          "type": "string"
        },
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "Response[CreateKortaRefundCommandResponse]": {
      "type": "object",
      "properties": {
        "ApiVersion": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        },
        "Data": {
          "$ref": "#/definitions/CreateKortaRefundCommandResponse"
        },
        "Error": {
          "$ref": "#/definitions/Error"
        },
        "CorrelationId": {
          "type": "string"
        }
      }
    },
    "CreateKortaRefundCommandResponse": {
      "type": "object",
      "properties": {
        "AccountId": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "CreateNotificationEmailExportOrderCommandRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "Email": {
          "description": "String length: inclusive between 0 and 50 (EMAIL_LENGTH)<br/>Value must be a valid email. (EMAIL_INVALID)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "ChargePartnerForCreditNote": {
          "default": false,
          "type": "boolean"
        },
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "CreateNotificationPrintExportOrderCommandRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "ChargePartnerForNotification": {
          "default": false,
          "type": "boolean",
          "readOnly": true
        },
        "ChargePartnerForCreditNote": {
          "default": false,
          "type": "boolean"
        },
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "CreateNotifyAccountsCommandRequest": {
      "required": [
        "ProcessingType",
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PartnerId": {
          "format": "int32",
          "type": "integer"
        },
        "CustomerId": {
          "format": "int64",
          "type": "integer"
        },
        "ProcessingType": {
          "description": "(PROCESSING_TYPE_REQUIRED)<br/>Value must be in the set: [Monthly, Daily] (PROCESSING_TYPE_IS_NOT_ALLOWED)",
          "type": "string"
        },
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "CreatePartCreditInvoiceCommandRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PartnerId": {
          "format": "int32",
          "type": "integer"
        },
        "InvoiceNumber": {
          "type": "string"
        },
        "ReturnDate": {
          "format": "date-time",
          "type": "string"
        },
        "ClientIpAddress": {
          "type": "string"
        },
        "Reference": {
          "type": "string"
        },
        "ReturnArticles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CreditArticle"
          }
        },
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "CreditArticle": {
      "type": "object",
      "properties": {
        "ArticleId": {
          "type": "string"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer"
        },
        "Description": {
          "type": "string"
        }
      }
    },
    "CreatePartnerCustomTextRequest": {
      "required": [
        "Key",
        "Value",
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "Key": {
          "description": "(CUSTOM_TEXT_KEY_REQUIRED)<br/>String length: inclusive between 0 and 50 (CUSTOM_TEXT_KEY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Value": {
          "description": "(CUSTOM_TEXT_VALUE_REQUIRED)<br/>String length: inclusive between 0 and 4000 (CUSTOM_TEXT_VALUE_LENGTH)",
          "maxLength": 4000,
          "minLength": 0,
          "type": "string"
        },
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "CreatePartReturnCommandRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "Reference": {
          "type": "string"
        },
        "PurchaseIdentifier": {
          "type": "string"
        },
        "PartnerId": {
          "format": "int32",
          "type": "integer"
        },
        "InternalComment": {
          "type": "string"
        },
        "InvoiceNumber": {
          "type": "string"
        },
        "ArticleId": {
          "type": "string"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer"
        },
        "UnitPrice": {
          "format": "double",
          "type": "number"
        },
        "VatUnitAmount": {
          "format": "double",
          "type": "number"
        },
        "Currency": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "TransactionDate": {
          "format": "date-time",
          "type": "string"
        },
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "CreatePaymentRequest": {
      "required": [
        "UniquePaymentId",
        "PaymentDate",
        "Amount",
        "CountryCode",
        "CurrencyCode",
        "PaymentType",
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "UniquePaymentId": {
          "description": "(UNIQUE_PAYMENT_ID_REQUIRED)<br/>String length: inclusive between 0 and 450 (UNIQUE_PAYMENT_ID_LENGTH)",
          "maxLength": 450,
          "minLength": 0,
          "type": "string"
        },
        "PaymentReference": {
          "type": "string"
        },
        "PaymentDate": {
          "format": "date-time",
          "description": "(PAYMENT_DATE_REQUIRED)<br/>Value must be a valid date-time. (PAYMENT_DATE_INVALID)",
          "type": "string"
        },
        "Amount": {
          "format": "double",
          "description": "(AMOUNT_REQUIRED)<br/>Value must be parsable to a decimal. (AMOUNT_PARSING)",
          "type": "number"
        },
        "MetaData": {
          "type": "string"
        },
        "CountryCode": {
          "description": "(COUNTRY_CODE_REQUIRED)<br/>Value must be a country code according to the ISO 3166 format. (COUNTRY_CODE_INVALID)",
          "type": "string"
        },
        "CurrencyCode": {
          "description": "(CURRENCY_CODE_IS_REQUIRED)<br/>Value must be a currency code according to the ISO 4217 format. (CURRENCY_CODE_INVALID)",
          "type": "string"
        },
        "InvoiceNumber": {
          "description": "String length: inclusive between 0 and 50 (INVOICE_NUMBER_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "PaymentType": {
          "description": "(PAYMENT_TYPE_REQUIRED)<br/>Value must be in the set: [Payment, DirectPayment, PaymentFromEseco, PaymentFromDebtCollection, PaymentFromDebtCollectionCompany, PaymentFromExternalSystem, MixedPayment] (PAYMENT_TYPE_INVALID)",
          "type": "string"
        },
        "Reference": {
          "description": "String length: inclusive between 0 and 255 (REFERENCE_LENGTH)",
          "maxLength": 255,
          "minLength": 0,
          "type": "string"
        },
        "InternalComment": {
          "description": "String length: inclusive between 0 and 50 (INTERNAL_COMMENT_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "CreatedBy": {
          "description": "String length: inclusive between 0 and 50 (CREATED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "Response[CreatePaymentResponse]": {
      "type": "object",
      "properties": {
        "ApiVersion": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        },
        "Data": {
          "$ref": "#/definitions/CreatePaymentResponse"
        },
        "Error": {
          "$ref": "#/definitions/Error"
        },
        "CorrelationId": {
          "type": "string"
        }
      }
    },
    "CreatePaymentResponse": {
      "type": "object",
      "properties": {
        "State": {
          "type": "string"
        },
        "Amount": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "CreatePortalUserRequest": {
      "required": [
        "Username",
        "Password",
        "PartnerIds",
        "PortalRoleIds",
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "Username": {
          "description": "(USER_NAME_REQUIRED)<br/>String length: inclusive between 3 and 50 (USER_NAME_LENGTH)",
          "maxLength": 50,
          "minLength": 3,
          "type": "string"
        },
        "Password": {
          "description": "(PASSWORD_REQUIRED)<br/>String length: inclusive between 6 and 2147483647 (PASSWORD_MINIMUM_LENGTH)",
          "maxLength": 2147483647,
          "minLength": 6,
          "type": "string"
        },
        "PartnerIds": {
          "description": "(PARTNER_IDS_REQUIRED)<br/>Value must be not be an empty collection. (PARTNER_IDS_REQUIRED)",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "PortalRoleIds": {
          "description": "(PORTAL_ROLE_IDS_REQUIRED)<br/>Value must be not be an empty collection. (PORTAL_ROLE_IDS_REQUIRED)",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "CreatePreferredInvoiceAddressRequest": {
      "required": [
        "PostalCode",
        "City",
        "CountryCode",
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "FirstName": {
          "description": "String length: inclusive between 0 and 50 (FIRST_NAME_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "LastName": {
          "description": "String length: inclusive between 0 and 50 (LAST_NAME_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "CompanyName": {
          "description": "String length: inclusive between 0 and 200 (COMPANY_NAME_LENGTH)",
          "maxLength": 200,
          "minLength": 0,
          "type": "string"
        },
        "AddressLine1": {
          "description": "String length: inclusive between 0 and 255 (ADDRESS1_LENGTH)",
          "maxLength": 255,
          "minLength": 0,
          "type": "string"
        },
        "AddressLine2": {
          "description": "String length: inclusive between 0 and 255 (ADDRESS2_LENGTH)",
          "maxLength": 255,
          "minLength": 0,
          "type": "string"
        },
        "CoAddress": {
          "description": "String length: inclusive between 0 and 255 (CO_ADDRESS_LENGTH)",
          "maxLength": 255,
          "minLength": 0,
          "type": "string"
        },
        "PostalCode": {
          "description": "String length: inclusive between 0 and 20 (POSTAL_CODE_LENGTH)<br/>(POSTAL_CODE_REQUIRED)",
          "maxLength": 20,
          "minLength": 0,
          "type": "string"
        },
        "City": {
          "description": "String length: inclusive between 0 and 50 (CITY_LENGTH)<br/>(CITY_REQUIRED)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "CountryCode": {
          "description": "String length: inclusive between 0 and 2 (COUNTRY_CODE_LENGTH)<br/>(COUNTRY_CODE_REQUIRED)<br/>Value must be a country code according to the ISO 3166 format. (COUNTRY_CODE_INVALID)",
          "maxLength": 2,
          "minLength": 0,
          "type": "string"
        },
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "GetPreferredInvoiceAddressRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "Response[GetPreferredInvoiceAddressResponse]": {
      "type": "object",
      "properties": {
        "ApiVersion": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        },
        "Data": {
          "$ref": "#/definitions/GetPreferredInvoiceAddressResponse"
        },
        "Error": {
          "$ref": "#/definitions/Error"
        },
        "CorrelationId": {
          "type": "string"
        }
      }
    },
    "GetPreferredInvoiceAddressResponse": {
      "type": "object",
      "properties": {
        "Address": {
          "$ref": "#/definitions/CustomerAddress"
        }
      }
    },
    "CustomerAddress": {
      "type": "object",
      "properties": {
        "FirstName": {
          "type": "string"
        },
        "LastName": {
          "type": "string"
        },
        "CompanyName": {
          "type": "string"
        },
        "AddressLine1": {
          "type": "string"
        },
        "AddressLine2": {
          "type": "string"
        },
        "CoAddress": {
          "type": "string"
        },
        "PostalCode": {
          "type": "string"
        },
        "City": {
          "type": "string"
        },
        "CountryCode": {
          "type": "string"
        }
      }
    },
    "RemovePreferredInvoiceAddressRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "CreatePreparePurgeCommandRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PurgeRequestId": {
          "type": "string"
        },
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "CreateProcessIncomingPaymentCommandRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "IncomingPaymentToProcessId": {
          "format": "int64",
          "type": "integer"
        },
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "Response[CreateProcessIncomingPaymentCommandResponse]": {
      "type": "object",
      "properties": {
        "ApiVersion": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        },
        "Data": {
          "$ref": "#/definitions/CreateProcessIncomingPaymentCommandResponse"
        },
        "Error": {
          "$ref": "#/definitions/Error"
        },
        "CorrelationId": {
          "type": "string"
        }
      }
    },
    "CreateProcessIncomingPaymentCommandResponse": {
      "type": "object",
      "properties": {
        "PaymentState": {
          "type": "string"
        },
        "Amount": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "CreatePurchaseAmountAdjustmentCommandRequest": {
      "required": [
        "ArticleId",
        "Description",
        "InvoiceNumber",
        "Reference",
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "VatRate": {
          "format": "double",
          "description": "(VAT_RATE_REQUIRED)",
          "maximum": 99999999,
          "minimum": 0,
          "type": "number"
        },
        "UnitPrice": {
          "format": "double",
          "description": "(UNIT_PRICE_REQUIRED)",
          "maximum": 99999999,
          "minimum": -99999999,
          "type": "number"
        },
        "Quantity": {
          "format": "int32",
          "description": "(QUANTITY_REQUIRED)",
          "maximum": 2147483647,
          "minimum": 1,
          "type": "integer"
        },
        "ArticleId": {
          "description": "(ARTICLE_ID_REQUIRED)",
          "type": "string"
        },
        "Description": {
          "description": "(DESCRIPTION_REQUIRED)",
          "type": "string"
        },
        "InternalComment": {
          "type": "string"
        },
        "InvoiceNumber": {
          "description": "(INVOICE_NUMBER_REQUIRED)",
          "type": "string"
        },
        "PurchaseIdentifier": {
          "type": "string"
        },
        "OrderNumber": {
          "type": "string"
        },
        "PartnerId": {
          "format": "int32",
          "description": "(PARTNER_ID_REQUIRED)",
          "maximum": 99999999,
          "minimum": 0,
          "type": "integer"
        },
        "ParentTransactionId": {
          "format": "int64",
          "type": "integer"
        },
        "Reference": {
          "description": "(REFERENCE_REQUIRED)",
          "type": "string"
        },
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "CreatePurgeCommandRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PurgeRequestId": {
          "type": "string"
        },
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "CreateRejectPendingInvoiceCommandRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "CreateReleasePendingInvoiceCommandRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "CreateReservationRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "ReservationAmount": {
          "format": "double",
          "description": "(RESERVATION_AMOUNT_RANGE)<br/>Value must be parsable to a decimal. (RESERVATION_AMOUNT_PARSING)",
          "maximum": 99999999,
          "type": "number"
        },
        "ProductCode": {
          "description": "String length: inclusive between 0 and 16 (PRODUCT_CODE_LENGTH)",
          "maxLength": 16,
          "minLength": 0,
          "type": "string"
        },
        "ForceApprove": {
          "default": false,
          "type": "boolean"
        },
        "SkipBoardMemberCheck": {
          "default": false,
          "type": "boolean"
        },
        "GuarantorId": {
          "format": "int64",
          "type": "integer"
        },
        "AutoActivate": {
          "default": false,
          "type": "boolean"
        },
        "SignatoryEmail": {
          "description": "Value must be a valid email. (SIGNATORY_EMAIL_INVALID)",
          "type": "string"
        },
        "SignatoryRegistrationNumber": {
          "description": "Value may only contain alpha numeric values and single white spaces (SIGNATORY_REGISTRATION_NUMBER_INVALID)",
          "type": "string"
        },
        "UsePersonalGuarantee": {
          "default": false,
          "type": "boolean"
        },
        "SigningOverrideBehavior": {
          "description": "Value must be in the set: [] (SIGNING_OVERRIDE_BEHAVIOR_INVALID)",
          "type": "string"
        },
        "HouseholdCalculationParameters": {
          "$ref": "#/definitions/HouseholdCalculationParameters"
        },
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "HouseholdCalculationParameters": {
      "type": "object",
      "properties": {
        "MonthlyIncome": {
          "format": "int32",
          "description": "Range: inclusive between 0 and 2147483647 (MONTHLY_INCOME_RANGE)",
          "maximum": 2147483647,
          "minimum": 0,
          "type": "integer"
        },
        "MonthlyLoanExpenses": {
          "format": "int32",
          "description": "Range: inclusive between 0 and 2147483647 (MONTHLY_LOAN_EXPENSES_RANGE)",
          "maximum": 2147483647,
          "minimum": 0,
          "type": "integer"
        },
        "MonthlyHouseholdExpenses": {
          "format": "int32",
          "description": "Range: inclusive between 0 and 2147483647 (MONTHLY_HOUSEHOLD_EXPENSES_RANGE)",
          "maximum": 2147483647,
          "minimum": 0,
          "type": "integer"
        },
        "NumberOfChildrenLivingAtHome": {
          "format": "int32",
          "description": "Range: inclusive between 0 and 2147483647 (NUMBER_OF_CHILDREN_LIVING_AT_HOME_RANGE)",
          "maximum": 2147483647,
          "minimum": 0,
          "type": "integer"
        }
      }
    },
    "CreateReservationApplicationRequest": {
      "required": [
        "PartnerId",
        "CurrencyCode",
        "CountryCode",
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "RegistrationNumber": {
          "description": "Value may only contain alpha numeric values and single white spaces (REGISTRATION_NUMBER_INVALID)",
          "type": "string"
        },
        "PartnerId": {
          "format": "int32",
          "description": "(PARTNER_ID_REQUIRED)",
          "type": "integer"
        },
        "RequestedAmount": {
          "format": "double",
          "description": "(REQUESTED_AMOUNT_RANGE)<br/>Value must be parsable to a decimal. (REQUESTED_AMOUNT_PARSING)",
          "maximum": 2147483647,
          "minimum": 0,
          "type": "number"
        },
        "CurrencyCode": {
          "description": "(CURRENCY_CODE_IS_REQUIRED)<br/>Value must be a currency code according to the ISO 4217 format. (CURRENCY_CODE_INVALID)",
          "type": "string"
        },
        "CountryCode": {
          "description": "(COUNTRY_CODE_REQUIRED)<br/>Value must be a country code according to the ISO 3166 format. (COUNTRY_CODE_INVALID)",
          "type": "string"
        },
        "ProductCode": {
          "description": "String length: inclusive between 0 and 16 (PRODUCT_CODE_LENGTH)",
          "maxLength": 16,
          "minLength": 0,
          "type": "string"
        },
        "AutoActivate": {
          "default": false,
          "type": "boolean"
        },
        "UseExistingProductCode": {
          "default": false,
          "type": "boolean"
        },
        "AdditionalInformation": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "Response[CreateReservationApplicationResponse]": {
      "type": "object",
      "properties": {
        "ApiVersion": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        },
        "Data": {
          "$ref": "#/definitions/CreateReservationApplicationResponse"
        },
        "Error": {
          "$ref": "#/definitions/Error"
        },
        "CorrelationId": {
          "type": "string"
        }
      }
    },
    "CreateReservationApplicationResponse": {
      "type": "object",
      "properties": {
        "ReservationApplicationId": {
          "format": "uuid",
          "type": "string"
        }
      }
    },
    "CreateRuleRequest": {
      "required": [
        "Name",
        "Action",
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "Name": {
          "description": "(RULE_NAME_REQUIRED)<br/>String length: inclusive between 0 and 50 (RULE_NAME_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Description": {
          "description": "String length: inclusive between 0 and 200 (RULE_DESCRIPTION_LENGTH)",
          "maxLength": 200,
          "minLength": 0,
          "type": "string"
        },
        "Action": {
          "description": "(RULE_ACTION_REQUIRED)<br/>Value must be in the set: [AddInvoiceOnHold, AddInvoice, DenyInvoice, AddInvoiceSigning, NoMatch] (RULE_ACTION_INVALID)",
          "type": "string"
        },
        "Order": {
          "format": "int32",
          "description": "(RULE_ORDER_RANGE)",
          "maximum": 2147483647,
          "minimum": 0,
          "type": "integer"
        },
        "Criteria": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RuleCriterion"
          }
        },
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "RuleCriterion": {
      "required": [
        "Operator",
        "CriterionType"
      ],
      "type": "object",
      "properties": {
        "Operator": {
          "description": "(RULE_CRITERION_OPERATOR_REQUIRED)<br/>Value must be in the set: [Equal, NotEqual, GreaterThan, LessThan, Like, NotLike] (RULE_CRITERION_OPERATOR_INVALID)",
          "type": "string"
        },
        "Value": {
          "description": "String length: inclusive between 0 and 128 (RULE_CRITERION_VALUE_LENGTH)",
          "maxLength": 128,
          "minLength": 0,
          "type": "string"
        },
        "PropertyName": {
          "description": "String length: inclusive between 0 and 128 (RULE_CRITERION_PROPERTY_NAME_LENGTH)",
          "maxLength": 128,
          "minLength": 0,
          "type": "string"
        },
        "CriterionType": {
          "description": "(RULE_CRITERION_TYPE_REQUIRED)",
          "type": "string"
        }
      }
    },
    "GetRulesRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "ExpandCriteria": {
          "default": false,
          "type": "boolean"
        },
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "Response[IEnumerable[GetRuleResponse]]": {
      "type": "object",
      "properties": {
        "ApiVersion": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        },
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetRuleResponse"
          }
        },
        "Error": {
          "$ref": "#/definitions/Error"
        },
        "CorrelationId": {
          "type": "string"
        }
      }
    },
    "GetRuleResponse": {
      "type": "object",
      "properties": {
        "RuleId": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Action": {
          "type": "string"
        },
        "Order": {
          "format": "int32",
          "type": "integer"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedOn": {
          "format": "date-time",
          "type": "string"
        },
        "UpdatedBy": {
          "type": "string"
        },
        "UpdatedOn": {
          "format": "date-time",
          "type": "string"
        },
        "Criteria": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetRuleCriterionResponse"
          }
        }
      }
    },
    "GetRuleCriterionResponse": {
      "type": "object",
      "properties": {
        "CriterionId": {
          "format": "int32",
          "type": "integer"
        },
        "Operator": {
          "type": "string"
        },
        "Value": {
          "type": "string"
        },
        "PropertyName": {
          "type": "string"
        },
        "CriterionType": {
          "type": "string"
        }
      }
    },
    "CreateRuleCriterionRequest": {
      "required": [
        "Operator",
        "CriterionType",
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "Operator": {
          "description": "(RULE_CRITERION_OPERATOR_REQUIRED)<br/>Value must be in the set: [Equal, NotEqual, GreaterThan, LessThan, Like, NotLike] (RULE_CRITERION_OPERATOR_INVALID)",
          "type": "string"
        },
        "Value": {
          "description": "String length: inclusive between 0 and 128 (RULE_CRITERION_VALUE_LENGTH)",
          "maxLength": 128,
          "minLength": 0,
          "type": "string"
        },
        "PropertyName": {
          "description": "String length: inclusive between 0 and 128 (RULE_CRITERION_PROPERTY_NAME_LENGTH)",
          "maxLength": 128,
          "minLength": 0,
          "type": "string"
        },
        "CriterionType": {
          "description": "(RULE_CRITERION_TYPE_REQUIRED)",
          "type": "string"
        },
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "GetRuleCriteriaRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "Response[IEnumerable[GetRuleCriterionResponse]]": {
      "type": "object",
      "properties": {
        "ApiVersion": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        },
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetRuleCriterionResponse"
          }
        },
        "Error": {
          "$ref": "#/definitions/Error"
        },
        "CorrelationId": {
          "type": "string"
        }
      }
    },
    "CreateSendReminderTextMessageCommandRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "CreateServiceUserRequest": {
      "required": [
        "Username",
        "Password",
        "PartnerIds",
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "Username": {
          "description": "(USER_NAME_REQUIRED)<br/>String length: inclusive between 0 and 50 (USER_NAME_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Password": {
          "description": "(PASSWORD_REQUIRED)<br/>String length: inclusive between 12 and 2147483647 (PASSWORD_MINIMUM_LENGTH)",
          "maxLength": 2147483647,
          "minLength": 12,
          "type": "string"
        },
        "PartnerIds": {
          "description": "(PARTNER_IDS_REQUIRED)<br/>Value must be not be an empty collection. (PARTNER_IDS_REQUIRED)",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "DefaultPartnerId": {
          "format": "int32",
          "type": "integer"
        },
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "CreateSetCustomersInvoiceRelatedEmailsCommandRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "Email": {
          "description": "Value must be a valid email. (EMAIL_INVALID)",
          "type": "string"
        },
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "CreateSetCustomersInvoiceRelatedMobilePhonesCommandRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "MobilePhone": {
          "description": "Value must be a mobile phone number. (MOBILE_PHONE_INVALID)",
          "type": "string"
        },
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "CreateTransferBalanceCommandRequest": {
      "required": [
        "PartnerId",
        "AccountType",
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "RegistrationNumber": {
          "description": "Value may only contain alpha numeric values and single white spaces (REGISTRATION_NUMBER_INVALID)",
          "type": "string"
        },
        "Amount": {
          "format": "double",
          "description": "Range: inclusive between -1E+16 and 1E+16 (AMOUNT_RANGE)<br/>Value must be parsable to a decimal. (AMOUNT_PARSING)",
          "type": "number"
        },
        "ProductCode": {
          "description": "String length: inclusive between 0 and 16 (PRODUCT_CODE_LENGTH)",
          "maxLength": 16,
          "minLength": 0,
          "type": "string"
        },
        "PartnerId": {
          "format": "int32",
          "description": "(PARTNER_ID_REQUIRED)",
          "type": "integer"
        },
        "AccountType": {
          "description": "(ACCOUNTTYPE_IS_REQUIRED)<br/>Value must be in the set: [PartPaymentAccount, CreditAccount, InterestFreeAccount] (ACCOUNTTYPE_INVALID)",
          "type": "string"
        },
        "CreditTimeLeft": {
          "format": "int32",
          "description": "Range: inclusive between 0 and 2147483647 (CREDIT_TIME_LEFT_RANGE)",
          "maximum": 2147483647,
          "minimum": 0,
          "type": "integer"
        },
        "CreatePendingCreditAccounts": {
          "default": false,
          "type": "boolean"
        },
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "CreateTransferPaymentCommandRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "SourceAccountId": {
          "format": "int64",
          "type": "integer"
        },
        "TargetAccountId": {
          "format": "int64",
          "type": "integer"
        },
        "AmountToTransfer": {
          "format": "double",
          "type": "number"
        },
        "SourceComment": {
          "type": "string"
        },
        "TargetComment": {
          "type": "string"
        },
        "Reference": {
          "type": "string"
        },
        "DebitInvoiceNumber": {
          "type": "string"
        },
        "PaymentMetaDataId": {
          "format": "int64",
          "type": "integer"
        },
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "CreateTransferPaymentToUnidentifiedCommandRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PaymentTransactionId": {
          "format": "int64",
          "description": "(PAYMENT_TRANSACTION_ID_REQUIRED)",
          "maximum": 2147483647,
          "minimum": 1,
          "type": "integer"
        },
        "AmountToTransfer": {
          "format": "double",
          "description": "(AMOUNT_RANGE)",
          "maximum": 99999999,
          "minimum": -99999999,
          "type": "number"
        },
        "Comment": {
          "description": "String length: inclusive between 0 and 50 (COMMENT_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Reference": {
          "description": "String length: inclusive between 1 and 255 (REFERENCE_LENGTH)",
          "maxLength": 255,
          "minLength": 1,
          "type": "string"
        },
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "CreateTransferToBankCommandRequest": {
      "required": [
        "InternalComment",
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "InternalComment": {
          "description": "(INTERNAL_COMMENT_REQUIRED)",
          "type": "string"
        },
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "CreateTrustlyPaymentCommandRequest": {
      "required": [
        "AccountingDate",
        "CurrencyCode",
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "AccountId": {
          "format": "int64",
          "type": "integer"
        },
        "PendingInvoiceId": {
          "format": "int64",
          "type": "integer"
        },
        "Amount": {
          "format": "double",
          "description": "Range: inclusive between 0,01 and 1E+16 (AMOUNT_RANGE)<br/>Value must be parsable to a decimal. (AMOUNT_PARSING)",
          "type": "number"
        },
        "AccountingDate": {
          "format": "date-time",
          "description": "(ACCOUNTING_DATE_IS_REQUIRED)<br/>Value must be a valid date-time. (ACCOUNTING_DATE_IS_INVALID)",
          "type": "string"
        },
        "CurrencyCode": {
          "description": "(CURRENCY_CODE_IS_REQUIRED)<br/>Value must be a currency code according to the ISO 4217 format. (CURRENCY_INVALID)",
          "type": "string"
        },
        "FileName": {
          "description": "String length: inclusive between 0 and 255 (FILENAME_LENGTH)",
          "maxLength": 255,
          "minLength": 0,
          "type": "string"
        },
        "Metadata": {
          "type": "string"
        },
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "Response[CreateTrustlyPaymentCommandResponse]": {
      "type": "object",
      "properties": {
        "ApiVersion": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        },
        "Data": {
          "$ref": "#/definitions/CreateTrustlyPaymentCommandResponse"
        },
        "Error": {
          "$ref": "#/definitions/Error"
        },
        "CorrelationId": {
          "type": "string"
        }
      }
    },
    "CreateTrustlyPaymentCommandResponse": {
      "type": "object",
      "properties": {
        "AccountId": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "CreateTrustlyRefundCommandRequest": {
      "required": [
        "AccountingDate",
        "CurrencyCode",
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "AccountId": {
          "format": "int64",
          "type": "integer"
        },
        "PendingInvoiceId": {
          "format": "int64",
          "type": "integer"
        },
        "Amount": {
          "format": "double",
          "description": "Range: inclusive between 0,01 and 1E+16 (AMOUNT_RANGE)<br/>Value must be parsable to a decimal. (AMOUNT_PARSING)",
          "type": "number"
        },
        "AccountingDate": {
          "format": "date-time",
          "description": "(ACCOUNTING_DATE_IS_REQUIRED)<br/>Value must be a valid date-time. (ACCOUNTING_DATE_IS_INVALID)",
          "type": "string"
        },
        "CurrencyCode": {
          "description": "(CURRENCY_CODE_IS_REQUIRED)<br/>Value must be a currency code according to the ISO 4217 format. (CURRENCY_INVALID)",
          "type": "string"
        },
        "FileName": {
          "description": "String length: inclusive between 0 and 255 (FILENAME_LENGTH)",
          "maxLength": 255,
          "minLength": 0,
          "type": "string"
        },
        "Metadata": {
          "type": "string"
        },
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "Response[CreateTrustlyRefundCommandResponse]": {
      "type": "object",
      "properties": {
        "ApiVersion": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        },
        "Data": {
          "$ref": "#/definitions/CreateTrustlyRefundCommandResponse"
        },
        "Error": {
          "$ref": "#/definitions/Error"
        },
        "CorrelationId": {
          "type": "string"
        }
      }
    },
    "CreateTrustlyRefundCommandResponse": {
      "type": "object",
      "properties": {
        "AccountId": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "CreateUpdateElectronicInvoiceReceiverCommandRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "ElectronicInvoiceReceiverAddress": {
          "type": "string"
        },
        "ElectronicInvoiceReceiverIntermediatorAddress": {
          "type": "string"
        },
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "CreateUpdateEmailAddressCommandRequest": {
      "required": [
        "Email",
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "Email": {
          "description": "(EMAIL_REQUIRED)<br/>Value must be a valid email. (EMAIL_INVALID)",
          "type": "string"
        },
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "GetAccountDetailsRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "Response[GetAccountDetailsResponse]": {
      "type": "object",
      "properties": {
        "ApiVersion": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        },
        "Data": {
          "$ref": "#/definitions/GetAccountDetailsResponse"
        },
        "Error": {
          "$ref": "#/definitions/Error"
        },
        "CorrelationId": {
          "type": "string"
        }
      }
    },
    "GetAccountDetailsResponse": {
      "type": "object",
      "properties": {
        "PartnerName": {
          "type": "string"
        },
        "TotalAmountLeftToPay": {
          "format": "double",
          "type": "number"
        },
        "AccountType": {
          "type": "string"
        },
        "PaymentReferenceNumber": {
          "type": "string"
        },
        "RelatedAccountPaymentReferenceNumber": {
          "type": "string"
        },
        "IncomingPaymentNumber1": {
          "type": "string"
        },
        "IncomingPaymentNumber2": {
          "type": "string"
        },
        "IncomingPaymentNumber3": {
          "type": "string"
        },
        "CurrencyCode": {
          "type": "string"
        },
        "CreditTime": {
          "format": "int32",
          "type": "integer"
        },
        "AvailableReservationAmount": {
          "format": "double",
          "type": "number"
        },
        "PendingAmountLeftToPay": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "GetAccountsWithMissingEmailRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "HasSuppressNotificationDeliverySet": {
          "default": false,
          "type": "boolean"
        },
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "Response[GetAccountsWithMissingEmailResponse]": {
      "type": "object",
      "properties": {
        "ApiVersion": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        },
        "Data": {
          "$ref": "#/definitions/GetAccountsWithMissingEmailResponse"
        },
        "Error": {
          "$ref": "#/definitions/Error"
        },
        "CorrelationId": {
          "type": "string"
        }
      }
    },
    "GetAccountsWithMissingEmailResponse": {
      "type": "object",
      "properties": {
        "Accounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountWithMissingEmail"
          }
        }
      }
    },
    "AccountWithMissingEmail": {
      "type": "object",
      "properties": {
        "AccountId": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "GetAccountTransactionsRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "ValidForCreditNote": {
          "default": false,
          "type": "boolean"
        },
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "Response[IEnumerable[GetAccountTransactionsResponse]]": {
      "type": "object",
      "properties": {
        "ApiVersion": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        },
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetAccountTransactionsResponse"
          }
        },
        "Error": {
          "$ref": "#/definitions/Error"
        },
        "CorrelationId": {
          "type": "string"
        }
      }
    },
    "GetAccountTransactionsResponse": {
      "type": "object",
      "properties": {
        "TransactionId": {
          "format": "int64",
          "type": "integer"
        },
        "ArticleId": {
          "type": "string"
        },
        "Type": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "Amount": {
          "format": "double",
          "type": "number"
        },
        "Currency": {
          "type": "string"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer"
        },
        "TransactionDate": {
          "format": "date-time",
          "type": "string"
        },
        "CreatedOn": {
          "format": "date-time",
          "type": "string"
        },
        "CreditCheckResultId": {
          "format": "int64",
          "type": "integer"
        },
        "VatRate": {
          "format": "double",
          "type": "number"
        },
        "OriginalCurrencyInformation": {
          "$ref": "#/definitions/OriginalCurrencyInformation"
        },
        "MovedToAccountId": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "OriginalCurrencyInformation": {
      "type": "object",
      "properties": {
        "Amount": {
          "format": "double",
          "type": "number"
        },
        "CurrencyCode": {
          "format": "int32",
          "enum": [
            8,
            12,
            32,
            36,
            44,
            48,
            50,
            51,
            52,
            60,
            64,
            68,
            72,
            84,
            90,
            96,
            104,
            108,
            116,
            124,
            132,
            136,
            144,
            152,
            156,
            170,
            174,
            188,
            191,
            192,
            203,
            208,
            214,
            222,
            230,
            232,
            238,
            242,
            262,
            270,
            292,
            320,
            324,
            328,
            332,
            340,
            344,
            348,
            352,
            356,
            360,
            364,
            368,
            376,
            388,
            392,
            398,
            400,
            404,
            408,
            410,
            414,
            417,
            418,
            422,
            426,
            430,
            434,
            446,
            454,
            458,
            462,
            478,
            480,
            484,
            496,
            498,
            504,
            512,
            516,
            524,
            532,
            533,
            548,
            554,
            558,
            566,
            578,
            586,
            590,
            598,
            600,
            604,
            608,
            634,
            643,
            646,
            654,
            678,
            682,
            690,
            694,
            702,
            704,
            706,
            710,
            728,
            748,
            752,
            756,
            760,
            764,
            776,
            780,
            784,
            788,
            800,
            807,
            818,
            826,
            834,
            840,
            858,
            860,
            882,
            886,
            901,
            931,
            932,
            933,
            934,
            936,
            937,
            938,
            940,
            941,
            943,
            944,
            946,
            947,
            948,
            949,
            950,
            951,
            952,
            953,
            955,
            956,
            957,
            958,
            959,
            960,
            961,
            962,
            963,
            964,
            965,
            967,
            968,
            969,
            970,
            971,
            972,
            973,
            974,
            975,
            976,
            977,
            978,
            979,
            980,
            981,
            984,
            985,
            986,
            990,
            994,
            997,
            999
          ],
          "type": "integer"
        },
        "Rate": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "GetAccountTransferInformationRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "Response[GetAccountTransferInformationResponse]": {
      "type": "object",
      "properties": {
        "ApiVersion": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        },
        "Data": {
          "$ref": "#/definitions/GetAccountTransferInformationResponse"
        },
        "Error": {
          "$ref": "#/definitions/Error"
        },
        "CorrelationId": {
          "type": "string"
        }
      }
    },
    "GetAccountTransferInformationResponse": {
      "type": "object",
      "properties": {
        "TargetAccountId": {
          "format": "int64",
          "type": "integer"
        },
        "TargetAccountType": {
          "type": "string"
        },
        "SourceAccountHasPayment": {
          "default": false,
          "type": "boolean"
        },
        "SourceAccountIsNotified": {
          "default": false,
          "type": "boolean"
        }
      }
    },
    "GetAccountTypesRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "Response[IEnumerable[AccountTypeResponse]]": {
      "type": "object",
      "properties": {
        "ApiVersion": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        },
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountTypeResponse"
          }
        },
        "Error": {
          "$ref": "#/definitions/Error"
        },
        "CorrelationId": {
          "type": "string"
        }
      }
    },
    "AccountTypeResponse": {
      "type": "object",
      "properties": {
        "AccountType": {
          "format": "int32",
          "type": "integer"
        },
        "IsEnabled": {
          "default": false,
          "type": "boolean"
        },
        "DefaultProduct": {
          "format": "uuid",
          "type": "string"
        },
        "AllowsCoApplicants": {
          "default": false,
          "type": "boolean"
        }
      }
    },
    "GetAccountTypeSettingsRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "Response[GetAccountTypeSettingResponse]": {
      "type": "object",
      "properties": {
        "ApiVersion": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        },
        "Data": {
          "$ref": "#/definitions/GetAccountTypeSettingResponse"
        },
        "Error": {
          "$ref": "#/definitions/Error"
        },
        "CorrelationId": {
          "type": "string"
        }
      }
    },
    "GetAccountTypeSettingResponse": {
      "type": "object",
      "properties": {
        "PartnerId": {
          "format": "int32",
          "type": "integer"
        },
        "AccountType": {
          "type": "string"
        },
        "IsDisabled": {
          "default": false,
          "type": "boolean"
        },
        "DefaultProductId": {
          "format": "uuid",
          "type": "string"
        },
        "AllowsCoApplicants": {
          "default": false,
          "type": "boolean"
        },
        "NotifyCustomerWhenOutstandingCreditExist": {
          "default": false,
          "type": "boolean"
        },
        "RequireCustomersConsentForPartialPayment": {
          "type": "string"
        }
      }
    },
    "GetActiveAccountsRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "Response[GetActiveAccountsResponse]": {
      "type": "object",
      "properties": {
        "ApiVersion": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        },
        "Data": {
          "$ref": "#/definitions/GetActiveAccountsResponse"
        },
        "Error": {
          "$ref": "#/definitions/Error"
        },
        "CorrelationId": {
          "type": "string"
        }
      }
    },
    "GetActiveAccountsResponse": {
      "type": "object",
      "properties": {
        "Accounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ActiveAccount"
          }
        }
      }
    },
    "ActiveAccount": {
      "type": "object",
      "properties": {
        "AccountId": {
          "format": "int64",
          "type": "integer"
        },
        "AccountType": {
          "type": "string"
        },
        "AccountState": {
          "type": "string"
        },
        "PartnerId": {
          "format": "int32",
          "type": "integer"
        },
        "PartnerName": {
          "type": "string"
        },
        "TotalAmountLeftToPay": {
          "format": "double",
          "type": "number"
        },
        "CurrencyCode": {
          "type": "string"
        }
      }
    },
    "GetActiveFixedInstallmentAccountsRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "ExcludeNotifiedAccounts": {
          "default": false,
          "type": "boolean"
        },
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "Response[IEnumerable[GetActiveFixedInstallmentAccountsResponse]]": {
      "type": "object",
      "properties": {
        "ApiVersion": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        },
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetActiveFixedInstallmentAccountsResponse"
          }
        },
        "Error": {
          "$ref": "#/definitions/Error"
        },
        "CorrelationId": {
          "type": "string"
        }
      }
    },
    "GetActiveFixedInstallmentAccountsResponse": {
      "type": "object",
      "properties": {
        "AccountId": {
          "format": "int64",
          "type": "integer"
        },
        "PartnerId": {
          "format": "int32",
          "type": "integer"
        },
        "PartnerName": {
          "type": "string"
        },
        "PartnerAgreementCode": {
          "type": "string"
        },
        "CanBePartiallyPaid": {
          "default": false,
          "type": "boolean"
        },
        "AccountState": {
          "type": "string"
        }
      }
    },
    "GetActiveNotificationsRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "Response[IEnumerable[GetActiveNotificationsResponse]]": {
      "type": "object",
      "properties": {
        "ApiVersion": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        },
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetActiveNotificationsResponse"
          }
        },
        "Error": {
          "$ref": "#/definitions/Error"
        },
        "CorrelationId": {
          "type": "string"
        }
      }
    },
    "GetActiveNotificationsResponse": {
      "type": "object",
      "properties": {
        "AccountId": {
          "format": "int64",
          "type": "integer"
        },
        "PaymentStatus": {
          "type": "string"
        },
        "IsReturned": {
          "default": false,
          "type": "boolean"
        },
        "PaymentStatusChangeDate": {
          "format": "date-time",
          "type": "string"
        },
        "NotificationDate": {
          "format": "date-time",
          "type": "string"
        },
        "Duedate": {
          "format": "date-time",
          "type": "string"
        },
        "NotificationId": {
          "format": "int64",
          "type": "integer"
        },
        "NotificationState": {
          "type": "string"
        },
        "PartnerId": {
          "format": "int32",
          "type": "integer"
        },
        "PartnerName": {
          "type": "string"
        },
        "LowestAmountToPay": {
          "format": "double",
          "type": "number"
        },
        "SecondaryLowestAmountToPay": {
          "format": "double",
          "type": "number"
        },
        "TotalAmountToPay": {
          "format": "double",
          "type": "number"
        },
        "AccountType": {
          "type": "string"
        },
        "CurrencyCode": {
          "type": "string"
        },
        "PaymentReferenceNumber": {
          "type": "string"
        },
        "CanBePartiallyPaid": {
          "default": false,
          "type": "boolean"
        }
      }
    },
    "GetActiveNotificationsByCustomerIdRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "AccountId": {
          "format": "int64",
          "type": "integer"
        },
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "Response[IEnumerable[GetActiveNotificationsByCustomerIdResponse]]": {
      "type": "object",
      "properties": {
        "ApiVersion": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        },
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetActiveNotificationsByCustomerIdResponse"
          }
        },
        "Error": {
          "$ref": "#/definitions/Error"
        },
        "CorrelationId": {
          "type": "string"
        }
      }
    },
    "GetActiveNotificationsByCustomerIdResponse": {
      "type": "object",
      "properties": {
        "AccountId": {
          "format": "int64",
          "type": "integer"
        },
        "PaymentStatus": {
          "type": "string"
        },
        "NotificationDate": {
          "format": "date-time",
          "type": "string"
        },
        "Duedate": {
          "format": "date-time",
          "type": "string"
        },
        "NotificationId": {
          "format": "int64",
          "type": "integer"
        },
        "NotificationState": {
          "type": "string"
        },
        "PartnerId": {
          "format": "int32",
          "type": "integer"
        },
        "PartnerName": {
          "type": "string"
        },
        "LowestAmountToPay": {
          "format": "double",
          "type": "number"
        },
        "SecondaryLowestAmountToPay": {
          "format": "double",
          "type": "number"
        },
        "TotalAmountToPay": {
          "format": "double",
          "type": "number"
        },
        "AccountType": {
          "type": "string"
        },
        "CurrencyCode": {
          "type": "string"
        },
        "PaymentReferenceNumber": {
          "type": "string"
        },
        "CanBePartiallyPaid": {
          "default": false,
          "type": "boolean"
        },
        "TransformsToAccountType": {
          "type": "string"
        },
        "CanAccountBeConverted": {
          "default": false,
          "type": "boolean"
        }
      }
    },
    "GetAnnualInterestStatementPdfRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "Response[Stream]": {
      "type": "object",
      "properties": {
        "ApiVersion": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        },
        "Data": {
          "$ref": "#/definitions/Stream"
        },
        "Error": {
          "$ref": "#/definitions/Error"
        },
        "CorrelationId": {
          "type": "string"
        }
      }
    },
    "Stream": {
      "type": "object",
      "properties": {
        "__identity": {
          "type": "object"
        }
      }
    },
    "GetBlockedForPurchaseRequest": {
      "required": [
        "PartnerId",
        "AccountType",
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PartnerId": {
          "format": "int32",
          "description": "(PARTNER_ID_REQUIRED)",
          "type": "integer"
        },
        "AccountType": {
          "description": "(ACCOUNTTYPE_IS_REQUIRED)",
          "type": "string"
        },
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "Response[GetBlockedForPurchaseResponse]": {
      "type": "object",
      "properties": {
        "ApiVersion": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        },
        "Data": {
          "$ref": "#/definitions/GetBlockedForPurchaseResponse"
        },
        "Error": {
          "$ref": "#/definitions/Error"
        },
        "CorrelationId": {
          "type": "string"
        }
      }
    },
    "GetBlockedForPurchaseResponse": {
      "type": "object",
      "properties": {
        "Blocked": {
          "default": false,
          "type": "boolean"
        }
      }
    },
    "GetCardMetadataRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "Response[GetCardMetadataResponse]": {
      "type": "object",
      "properties": {
        "ApiVersion": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        },
        "Data": {
          "$ref": "#/definitions/GetCardMetadataResponse"
        },
        "Error": {
          "$ref": "#/definitions/Error"
        },
        "CorrelationId": {
          "type": "string"
        }
      }
    },
    "GetCardMetadataResponse": {
      "type": "object",
      "properties": {
        "MaskedCardNo": {
          "type": "string"
        },
        "CurrencyCodeTransaction": {
          "type": "string"
        },
        "AmountTransaction": {
          "format": "double",
          "type": "number"
        },
        "AcquirerCountryCode": {
          "type": "string"
        },
        "PosEntryMode": {
          "type": "string"
        },
        "CurrencyCodeCHB": {
          "type": "string"
        },
        "AmountCHB": {
          "format": "double",
          "type": "number"
        },
        "TransactionCode": {
          "type": "string"
        },
        "TransactionType": {
          "type": "string"
        },
        "PurchaseDate": {
          "format": "date-time",
          "type": "string"
        },
        "Microref": {
          "type": "string"
        },
        "MerchantName": {
          "type": "string"
        },
        "MerchantCity": {
          "type": "string"
        },
        "MerchantCountryCode": {
          "type": "string"
        },
        "MerchantCategoryCode": {
          "type": "string"
        },
        "CurrencyRate": {
          "format": "double",
          "type": "number"
        },
        "CardId": {
          "type": "string"
        },
        "CardIdVersionNumber": {
          "type": "string"
        }
      }
    },
    "GetCardTransactionsRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PageIndex": {
          "format": "int32",
          "description": "Range: inclusive between 0 and 2147483647 (PAGE_INDEX_POSITIVE)",
          "maximum": 2147483647,
          "minimum": 0,
          "type": "integer"
        },
        "PageSize": {
          "format": "int32",
          "description": "Range: inclusive between 1 and 2147483647 (PAGE_SIZE_POSITIVE)",
          "maximum": 2147483647,
          "minimum": 1,
          "type": "integer"
        },
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "Response[PagedResponse[CardTransaction]]": {
      "type": "object",
      "properties": {
        "ApiVersion": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        },
        "Data": {
          "$ref": "#/definitions/PagedResponse[CardTransaction]"
        },
        "Error": {
          "$ref": "#/definitions/Error"
        },
        "CorrelationId": {
          "type": "string"
        }
      }
    },
    "PagedResponse[CardTransaction]": {
      "type": "object",
      "properties": {
        "Metadata": {
          "$ref": "#/definitions/PaginationMetadata"
        },
        "Result": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CardTransaction"
          }
        }
      }
    },
    "PaginationMetadata": {
      "type": "object",
      "properties": {
        "CurrentPage": {
          "format": "int32",
          "type": "integer"
        },
        "PageCount": {
          "format": "int32",
          "type": "integer"
        },
        "PageSize": {
          "format": "int32",
          "type": "integer"
        },
        "TotalCount": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "CardTransaction": {
      "type": "object",
      "properties": {
        "TransactionId": {
          "type": "string"
        },
        "CardId": {
          "format": "int64",
          "type": "integer"
        },
        "CardVersion": {
          "format": "int32",
          "type": "integer"
        },
        "MaskedCardNumber": {
          "type": "string"
        },
        "TransactionDate": {
          "format": "date-time",
          "type": "string"
        },
        "Amount": {
          "format": "double",
          "type": "number"
        },
        "TransactionType": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "MerchantName": {
          "type": "string"
        },
        "MerchantCategoryCode": {
          "type": "string"
        },
        "IsPending": {
          "default": false,
          "type": "boolean"
        }
      }
    },
    "GetClientRolesRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "Response[IEnumerable[GetClientRoleResponse]]": {
      "type": "object",
      "properties": {
        "ApiVersion": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        },
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetClientRoleResponse"
          }
        },
        "Error": {
          "$ref": "#/definitions/Error"
        },
        "CorrelationId": {
          "type": "string"
        }
      }
    },
    "GetClientRoleResponse": {
      "type": "object",
      "properties": {
        "ClientRoleId": {
          "format": "int64",
          "type": "integer"
        },
        "RoleName": {
          "type": "string"
        },
        "ActiveDirectoryGroupNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GetCommitmentsRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "Response[IEnumerable[GetCommitmentsResponse]]": {
      "type": "object",
      "properties": {
        "ApiVersion": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        },
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetCommitmentsResponse"
          }
        },
        "Error": {
          "$ref": "#/definitions/Error"
        },
        "CorrelationId": {
          "type": "string"
        }
      }
    },
    "GetCommitmentsResponse": {
      "type": "object",
      "properties": {
        "PartnerId": {
          "format": "int64",
          "type": "integer"
        },
        "PartnerName": {
          "type": "string"
        },
        "ExternalId": {
          "type": "string"
        },
        "CreditLimit": {
          "format": "double",
          "type": "number"
        },
        "Email": {
          "type": "string"
        },
        "MobilePhone": {
          "type": "string"
        }
      }
    },
    "GetCompanyInformationRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "Response[IEnumerable[GetCompanyInformationResponse]]": {
      "type": "object",
      "properties": {
        "ApiVersion": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        },
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetCompanyInformationResponse"
          }
        },
        "Error": {
          "$ref": "#/definitions/Error"
        },
        "CorrelationId": {
          "type": "string"
        }
      }
    },
    "GetCompanyInformationResponse": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "RegistrationNumber": {
          "type": "string"
        },
        "DunsNumber": {
          "type": "string"
        },
        "Type": {
          "type": "string"
        },
        "PostalAddress": {
          "$ref": "#/definitions/CompanyAddress"
        },
        "VisitingAddress": {
          "$ref": "#/definitions/CompanyAddress"
        }
      }
    },
    "CompanyAddress": {
      "type": "object",
      "properties": {
        "Address": {
          "type": "string"
        },
        "PostalCode": {
          "type": "string"
        },
        "City": {
          "type": "string"
        },
        "Country": {
          "type": "string"
        }
      }
    },
    "GetConversionOptionsRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "Response[GetConversionOptionsResponse]": {
      "type": "object",
      "properties": {
        "ApiVersion": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        },
        "Data": {
          "$ref": "#/definitions/GetConversionOptionsResponse"
        },
        "Error": {
          "$ref": "#/definitions/Error"
        },
        "CorrelationId": {
          "type": "string"
        }
      }
    },
    "GetConversionOptionsResponse": {
      "type": "object",
      "properties": {
        "TargetAccountTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GetCountriesRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "Response[IEnumerable[GetCountryResponse]]": {
      "type": "object",
      "properties": {
        "ApiVersion": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        },
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetCountryResponse"
          }
        },
        "Error": {
          "$ref": "#/definitions/Error"
        },
        "CorrelationId": {
          "type": "string"
        }
      }
    },
    "GetCountryResponse": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string"
        },
        "CountryCode": {
          "type": "string"
        },
        "Currency": {
          "type": "string"
        },
        "Culture": {
          "type": "string"
        },
        "InEu": {
          "default": false,
          "type": "boolean"
        }
      }
    },
    "GetCountrySettingRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "Response[GetCountrySettingResponse]": {
      "type": "object",
      "properties": {
        "ApiVersion": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        },
        "Data": {
          "$ref": "#/definitions/GetCountrySettingResponse"
        },
        "Error": {
          "$ref": "#/definitions/Error"
        },
        "CorrelationId": {
          "type": "string"
        }
      }
    },
    "GetCountrySettingResponse": {
      "type": "object",
      "properties": {
        "CountryCode": {
          "type": "string"
        },
        "ExternalPaymentRefNumberStart": {
          "format": "int32",
          "type": "integer"
        },
        "PaymentRefNumberStart": {
          "format": "int32",
          "type": "integer"
        },
        "PaymentRefNumberLength": {
          "format": "int32",
          "type": "integer"
        },
        "AllowNotificationFeeOnReminders": {
          "default": false,
          "type": "boolean"
        },
        "NumberOfDaysToStopNotification": {
          "format": "int32",
          "type": "integer"
        },
        "NumberOfHoursToAlwaysReuseAddress": {
          "format": "int32",
          "type": "integer"
        },
        "MinimumDaysBeforeTerminationNotice": {
          "format": "int32",
          "type": "integer"
        },
        "TerminationNoticeDueDateDays": {
          "format": "int32",
          "type": "integer"
        },
        "MinimumDaysBeforeExportingDebtAfterTerminationNotice": {
          "format": "int32",
          "type": "integer"
        },
        "OutstandingCreditNoticeThreshold": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "GetCreditCheckResultRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "Response[GetCreditCheckResultResponse]": {
      "type": "object",
      "properties": {
        "ApiVersion": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        },
        "Data": {
          "$ref": "#/definitions/GetCreditCheckResultResponse"
        },
        "Error": {
          "$ref": "#/definitions/Error"
        },
        "CorrelationId": {
          "type": "string"
        }
      }
    },
    "GetCreditCheckResultResponse": {
      "type": "object",
      "properties": {
        "CheckedDate": {
          "format": "date-time",
          "type": "string"
        },
        "IsApproved": {
          "default": false,
          "type": "boolean"
        },
        "Cause": {
          "type": "string"
        },
        "CreditCheckAddress": {
          "$ref": "#/definitions/CreditCheckAddress"
        },
        "LandLinePhoneNumber": {
          "type": "string"
        },
        "MobilePhoneNumber": {
          "type": "string"
        },
        "Email": {
          "type": "string"
        },
        "ClientIpAddress": {
          "type": "string"
        },
        "ExternalCreditCheckResponseId": {
          "type": "string"
        }
      }
    },
    "CreditCheckAddress": {
      "type": "object",
      "properties": {
        "AddressLine1": {
          "type": "string"
        },
        "PostalCode": {
          "type": "string"
        },
        "City": {
          "type": "string"
        }
      }
    },
    "ModifyCreditCheckResultRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "IsReusable": {
          "default": false,
          "type": "boolean"
        },
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "GetCreditServicesByCountryRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "ForCompany": {
          "default": false,
          "type": "boolean"
        },
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "Response[IEnumerable[GetCreditServiceResponse]]": {
      "type": "object",
      "properties": {
        "ApiVersion": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        },
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetCreditServiceResponse"
          }
        },
        "Error": {
          "$ref": "#/definitions/Error"
        },
        "CorrelationId": {
          "type": "string"
        }
      }
    },
    "GetCreditServiceResponse": {
      "type": "object",
      "properties": {
        "CreditValidationServiceId": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "TypeName": {
          "type": "string"
        },
        "UserId": {
          "type": "string"
        },
        "ForCompany": {
          "default": false,
          "type": "boolean"
        },
        "CountryCode": {
          "type": "string"
        },
        "UsesCustomerCode": {
          "default": false,
          "type": "boolean"
        },
        "UsesCustomerCodeOwner": {
          "default": false,
          "type": "boolean"
        },
        "UsesCustomerPassword": {
          "default": false,
          "type": "boolean"
        },
        "UsesInternalScore": {
          "default": false,
          "type": "boolean"
        },
        "UsesScoringModelName": {
          "default": false,
          "type": "boolean"
        }
      }
    },
    "GetCreditTemplatesByPartnerRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "GetCreditValidationTemplateRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "Response[GetCreditValidationTemplateResponse]": {
      "type": "object",
      "properties": {
        "ApiVersion": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        },
        "Data": {
          "$ref": "#/definitions/GetCreditValidationTemplateResponse"
        },
        "Error": {
          "$ref": "#/definitions/Error"
        },
        "CorrelationId": {
          "type": "string"
        }
      }
    },
    "GetCreditValidationTemplateResponse": {
      "type": "object",
      "properties": {
        "PrimaryUsername": {
          "type": "string"
        },
        "PrimaryPassword": {
          "type": "string"
        }
      }
    },
    "GetCustomerRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "Response[GetCustomerResponse]": {
      "type": "object",
      "properties": {
        "ApiVersion": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        },
        "Data": {
          "$ref": "#/definitions/GetCustomerResponse"
        },
        "Error": {
          "$ref": "#/definitions/Error"
        },
        "CorrelationId": {
          "type": "string"
        }
      }
    },
    "GetCustomerResponse": {
      "type": "object",
      "properties": {
        "CustomerId": {
          "format": "int64",
          "type": "integer"
        },
        "RegistrationNumber": {
          "type": "string"
        },
        "Address": {
          "$ref": "#/definitions/Address"
        },
        "MobilePhoneNumbers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "RelatedEmailAddresses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "PrimaryEmailAddress": {
          "type": "string"
        },
        "DateOfBirth": {
          "format": "date-time",
          "type": "string"
        },
        "IsInExternalDebtCollection": {
          "default": false,
          "type": "boolean"
        },
        "IsInInternalDebtCollection": {
          "default": false,
          "type": "boolean"
        },
        "IsDebtCollectionWhitelisted": {
          "default": false,
          "type": "boolean"
        },
        "IsImposter": {
          "default": false,
          "type": "boolean"
        },
        "IsBlockedForPurchase": {
          "default": false,
          "type": "boolean"
        },
        "IsLegallyIncapacitated": {
          "default": false,
          "type": "boolean"
        },
        "IsDeceased": {
          "default": false,
          "type": "boolean"
        }
      }
    },
    "Address": {
      "type": "object",
      "properties": {
        "Firstname": {
          "type": "string"
        },
        "Lastname": {
          "type": "string"
        },
        "CompanyName": {
          "type": "string"
        },
        "Address1": {
          "type": "string"
        },
        "Address2": {
          "type": "string"
        },
        "COAddress": {
          "type": "string"
        },
        "PostalCode": {
          "type": "string"
        },
        "City": {
          "type": "string"
        },
        "CountryCode": {
          "type": "string"
        }
      }
    },
    "GetCustomerByRegistrationNumberRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "Response[GetCustomerByRegistrationNumberResponse]": {
      "type": "object",
      "properties": {
        "ApiVersion": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        },
        "Data": {
          "$ref": "#/definitions/GetCustomerByRegistrationNumberResponse"
        },
        "Error": {
          "$ref": "#/definitions/Error"
        },
        "CorrelationId": {
          "type": "string"
        }
      }
    },
    "GetCustomerByRegistrationNumberResponse": {
      "type": "object",
      "properties": {
        "CustomerId": {
          "format": "int64",
          "type": "integer"
        },
        "RegistrationNumber": {
          "type": "string"
        },
        "Firstname": {
          "type": "string"
        },
        "Lastname": {
          "type": "string"
        },
        "CountryCode": {
          "type": "string"
        },
        "Email": {
          "type": "string"
        },
        "IsPreferredEmail": {
          "default": false,
          "type": "boolean"
        }
      }
    },
    "GetCustomerProxiesRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "Response[GetCustomerProxiesResponse]": {
      "type": "object",
      "properties": {
        "ApiVersion": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        },
        "Data": {
          "$ref": "#/definitions/GetCustomerProxiesResponse"
        },
        "Error": {
          "$ref": "#/definitions/Error"
        },
        "CorrelationId": {
          "type": "string"
        }
      }
    },
    "GetCustomerProxiesResponse": {
      "type": "object",
      "properties": {
        "CustomerProxies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerProxy"
          }
        }
      }
    },
    "CustomerProxy": {
      "type": "object",
      "properties": {
        "CustomerProxyId": {
          "format": "int64",
          "type": "integer"
        },
        "ProxyIdentifier": {
          "type": "string"
        },
        "FriendlyName": {
          "type": "string"
        },
        "ExpirationDate": {
          "format": "date-time",
          "type": "string"
        },
        "CreatedBy": {
          "type": "string"
        },
        "CreatedOn": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "GetCustomersByEmailRequest": {
      "required": [
        "Email",
        "CountryCode",
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "Email": {
          "description": "(EMAIL_REQUIRED)<br/>Value must be a valid email. (EMAIL_INVALID)",
          "type": "string"
        },
        "CountryCode": {
          "description": "(COUNTRY_CODE_REQUIRED)<br/>Value must be a country code according to the ISO 3166 format. (COUNTRY_CODE_INVALID)",
          "type": "string"
        },
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "Response[IEnumerable[CustomerData]]": {
      "type": "object",
      "properties": {
        "ApiVersion": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        },
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerData"
          }
        },
        "Error": {
          "$ref": "#/definitions/Error"
        },
        "CorrelationId": {
          "type": "string"
        }
      }
    },
    "CustomerData": {
      "type": "object",
      "properties": {
        "CustomerId": {
          "format": "int64",
          "type": "integer"
        },
        "RegistrationNumber": {
          "type": "string"
        },
        "Address": {
          "$ref": "#/definitions/Address"
        },
        "MobilePhoneNumbers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "EmailAddresses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "DateOfBirth": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "GetDefaultCreditTemplateConfigurationsByCountryRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "ForCompany": {
          "default": false,
          "type": "boolean"
        },
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "Response[IEnumerable[GetDefaultCreditTemplateConfigurationResponse]]": {
      "type": "object",
      "properties": {
        "ApiVersion": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        },
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetDefaultCreditTemplateConfigurationResponse"
          }
        },
        "Error": {
          "$ref": "#/definitions/Error"
        },
        "CorrelationId": {
          "type": "string"
        }
      }
    },
    "GetDefaultCreditTemplateConfigurationResponse": {
      "type": "object",
      "properties": {
        "DefaultCreditTemplateConfigurationId": {
          "format": "int32",
          "type": "integer"
        },
        "CreditService": {
          "$ref": "#/definitions/CreditService"
        },
        "CreditLimit": {
          "format": "int32",
          "type": "integer"
        },
        "DefaultCutoffScore": {
          "format": "int32",
          "type": "integer"
        },
        "DefaultInternalScore": {
          "format": "int32",
          "type": "integer"
        },
        "DefaultScoringModelName": {
          "type": "string"
        },
        "FallbackTemplate": {
          "$ref": "#/definitions/FallbackTemplate"
        },
        "TemplateCode": {
          "type": "string"
        },
        "CreditValidationStrategy": {
          "type": "string"
        }
      }
    },
    "GetDueDateInformationRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "Response[GetDueDateInformationResponse]": {
      "type": "object",
      "properties": {
        "ApiVersion": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        },
        "Data": {
          "$ref": "#/definitions/GetDueDateInformationResponse"
        },
        "Error": {
          "$ref": "#/definitions/Error"
        },
        "CorrelationId": {
          "type": "string"
        }
      }
    },
    "GetDueDateInformationResponse": {
      "type": "object",
      "properties": {
        "CanBeExtended": {
          "default": false,
          "type": "boolean"
        },
        "NewExtendedDueDate": {
          "format": "date-time",
          "type": "string"
        },
        "Reason": {
          "type": "string"
        }
      }
    },
    "GetExternalNotificationPdfRequest": {
      "required": [
        "Payload",
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "Payload": {
          "description": "(PAYLOAD_IS_REQUIRED)",
          "type": "string"
        },
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "GetMainApplicantNotificationDocumentRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "Response[NotificationExportOrderDocument]": {
      "type": "object",
      "properties": {
        "ApiVersion": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        },
        "Data": {
          "$ref": "#/definitions/NotificationExportOrderDocument"
        },
        "Error": {
          "$ref": "#/definitions/Error"
        },
        "CorrelationId": {
          "type": "string"
        }
      }
    },
    "NotificationExportOrderDocument": {
      "type": "object",
      "properties": {
        "PaymentReferenceNumber": {
          "type": "string"
        },
        "PartnerContactInformation": {
          "$ref": "#/definitions/CorporationContactInformation"
        },
        "FinanceCorporationContactInformation": {
          "$ref": "#/definitions/CorporationContactInformation"
        },
        "CallCenterContactInformation": {
          "$ref": "#/definitions/CorporationContactInformation"
        },
        "CustomerContactInformation": {
          "$ref": "#/definitions/CustomerContactInformation"
        },
        "DeliveryInformation": {
          "$ref": "#/definitions/CustomerContactInformation"
        },
        "NotificationDocumentText": {
          "$ref": "#/definitions/NotificationDocumentText"
        },
        "DueDate": {
          "format": "date-time",
          "type": "string"
        },
        "InvoiceTemplateCode": {
          "type": "string"
        },
        "CountryCode": {
          "type": "string"
        },
        "CurrencyCode": {
          "type": "string"
        },
        "NotificationDate": {
          "format": "date-time",
          "type": "string"
        },
        "CapitalDebtLeftToPay": {
          "format": "double",
          "type": "number"
        },
        "InterestLeftToPay": {
          "format": "double",
          "type": "number"
        },
        "YearlyInterestRate": {
          "format": "double",
          "type": "number"
        },
        "ExpiredRegularNotificationDueDate": {
          "format": "date-time",
          "type": "string"
        },
        "ExpiredRegularNotificationInvoiceNumber": {
          "type": "string"
        },
        "FirstInvoiceSummary": {
          "$ref": "#/definitions/InvoiceSummary"
        },
        "DebtCollectionFee": {
          "format": "double",
          "type": "number"
        },
        "DebtCollectionOtherFees": {
          "format": "double",
          "type": "number"
        },
        "LowestCapitalDebtLeftToPay": {
          "format": "double",
          "type": "number"
        },
        "SecondaryLowestCapitalDebtLeftToPay": {
          "format": "double",
          "type": "number"
        },
        "AccountType": {
          "type": "string"
        },
        "AccountId": {
          "format": "int64",
          "type": "integer"
        },
        "NotificationId": {
          "format": "int64",
          "type": "integer"
        },
        "CustomerId": {
          "format": "int64",
          "type": "integer"
        },
        "PartnerId": {
          "format": "int32",
          "type": "integer"
        },
        "UnisonOrderNumber": {
          "type": "string"
        },
        "UnisonPurchaserAlias": {
          "type": "string"
        },
        "UnisonTransactionDate": {
          "format": "date-time",
          "type": "string"
        },
        "CostCenter": {
          "type": "string"
        },
        "ReferencePerson": {
          "type": "string"
        },
        "InvoiceNumber": {
          "type": "string"
        },
        "TotalAmountToPay": {
          "format": "double",
          "type": "number"
        },
        "LowestAmountToPay": {
          "format": "double",
          "type": "number"
        },
        "TotalAmountToPayOnAccount": {
          "format": "double",
          "type": "number"
        },
        "CreditTime": {
          "format": "int32",
          "type": "integer"
        },
        "CurrentCreditMonth": {
          "format": "int32",
          "type": "integer"
        },
        "CreditAmount": {
          "format": "double",
          "type": "number"
        },
        "InvoiceRows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UnifiedInvoiceRow"
          }
        },
        "VatRows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VatRow"
          }
        },
        "NumberOfReminders": {
          "format": "int32",
          "type": "integer"
        },
        "NotificationState": {
          "type": "string"
        },
        "ReservationAmount": {
          "format": "double",
          "type": "number"
        },
        "CurrentDebt": {
          "format": "double",
          "type": "number"
        },
        "AvailableReservationAmount": {
          "format": "double",
          "type": "number"
        },
        "CreditTimeLeft": {
          "format": "int32",
          "type": "integer"
        },
        "SecondaryLowestAmountToPay": {
          "format": "double",
          "type": "number"
        },
        "SubAccountNotifications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubAccountNotification"
          }
        },
        "SubAccountsMovedToExternalDebtCollection": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubAccountNotification"
          }
        },
        "SubAccountsMovedToCollectionNotice": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubAccountNotification"
          }
        },
        "SubAccountsMovedToTerminationNotice": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubAccountNotification"
          }
        },
        "MergedConsolidationSubAccount": {
          "$ref": "#/definitions/SubAccountNotification"
        },
        "CanBePartiallyPaid": {
          "default": false,
          "type": "boolean"
        },
        "TransfersToFixedInstallment": {
          "default": false,
          "type": "boolean"
        },
        "InvoiceIntent": {
          "type": "string"
        }
      }
    },
    "CorporationContactInformation": {
      "type": "object",
      "properties": {
        "VatIdentificationNumber": {
          "type": "string"
        },
        "OrganisationNumber": {
          "type": "string"
        },
        "Name": {
          "type": "string"
        },
        "AddressLine1": {
          "type": "string"
        },
        "AddressLine2": {
          "type": "string"
        },
        "PostalCode": {
          "type": "string"
        },
        "City": {
          "type": "string"
        },
        "CountryName": {
          "type": "string"
        },
        "PhoneNumber": {
          "type": "string"
        },
        "Email": {
          "type": "string"
        },
        "WebSite": {
          "type": "string"
        },
        "OpeningHours": {
          "type": "string"
        },
        "IncomingPaymentNo1": {
          "type": "string"
        },
        "IncomingPaymentNo2": {
          "type": "string"
        },
        "IncomingPaymentNo3": {
          "type": "string"
        }
      }
    },
    "CustomerContactInformation": {
      "type": "object",
      "properties": {
        "ExternalCustomerId": {
          "type": "string"
        },
        "RegistrationNumber": {
          "type": "string"
        },
        "CustomerFirstName": {
          "type": "string"
        },
        "CustomerLastName": {
          "type": "string"
        },
        "CustomerFullName": {
          "type": "string"
        },
        "CompanyName": {
          "type": "string"
        },
        "AddressLine1": {
          "type": "string"
        },
        "AddressLine2": {
          "type": "string"
        },
        "COAddress": {
          "type": "string"
        },
        "PostalCode": {
          "type": "string"
        },
        "City": {
          "type": "string"
        },
        "CountryCode": {
          "type": "string"
        },
        "CountryName": {
          "type": "string"
        },
        "CustomerType": {
          "type": "string"
        },
        "Email": {
          "type": "string"
        },
        "ElectronicInvoiceReceiverAddress": {
          "type": "string"
        },
        "ElectronicInvoiceReceiverIntermediatorAddress": {
          "type": "string"
        }
      }
    },
    "NotificationDocumentText": {
      "type": "object",
      "properties": {
        "NotificationHeader": {
          "type": "string"
        },
        "MessageHeader": {
          "type": "string"
        },
        "MessageBody": {
          "type": "string"
        },
        "TransferText": {
          "type": "string"
        },
        "OrderNumberHeader": {
          "type": "string"
        }
      }
    },
    "InvoiceSummary": {
      "type": "object",
      "properties": {
        "NotificationDate": {
          "format": "date-time",
          "type": "string"
        },
        "DueDate": {
          "format": "date-time",
          "type": "string"
        },
        "InvoiceNumber": {
          "type": "string"
        },
        "TotalAmountToPay": {
          "format": "double",
          "type": "number"
        },
        "TotalVatAmount": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "UnifiedInvoiceRow": {
      "type": "object",
      "properties": {
        "RowType": {
          "type": "string"
        },
        "InvoiceRowCategory": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        },
        "TransactionDate": {
          "format": "date-time",
          "type": "string"
        },
        "ArticleId": {
          "type": "string"
        },
        "Quantity": {
          "format": "int32",
          "type": "integer"
        },
        "VATRate": {
          "format": "double",
          "type": "number"
        },
        "VATAmount": {
          "format": "double",
          "type": "number"
        },
        "UnitPrice": {
          "format": "double",
          "type": "number"
        },
        "PurchaserAlias": {
          "type": "string"
        },
        "Sum": {
          "format": "double",
          "type": "number"
        },
        "OriginalCurrencyAmount": {
          "format": "double",
          "type": "number"
        },
        "OriginalCurrencyCode": {
          "type": "string"
        },
        "OriginalCurrencyRate": {
          "format": "double",
          "type": "number"
        },
        "OrderNumber": {
          "type": "string"
        },
        "ReferencePerson": {
          "type": "string"
        },
        "CostCenter": {
          "type": "string"
        },
        "IntegrationId": {
          "type": "string"
        },
        "PurchaseIdentifier": {
          "type": "string"
        },
        "MaskedCardNumber": {
          "type": "string"
        }
      }
    },
    "VatRow": {
      "type": "object",
      "properties": {
        "VATRate": {
          "format": "double",
          "type": "number"
        },
        "VATAmount": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "SubAccountNotification": {
      "type": "object",
      "properties": {
        "IncludedInMergedConsolidationSubAccount": {
          "default": false,
          "type": "boolean"
        },
        "NotificationState": {
          "type": "string"
        },
        "AccountType": {
          "type": "string"
        },
        "AccountId": {
          "format": "int64",
          "type": "integer"
        },
        "NotificationId": {
          "format": "int64",
          "type": "integer"
        },
        "CostCenter": {
          "type": "string"
        },
        "ReferencePerson": {
          "type": "string"
        },
        "PurchaserAlias": {
          "type": "string"
        },
        "OrderNumber": {
          "type": "string"
        },
        "TransactionDate": {
          "format": "date-time",
          "type": "string"
        },
        "InvoiceNumber": {
          "type": "string"
        },
        "TotalAmountToPay": {
          "format": "double",
          "type": "number"
        },
        "LowestAmountToPay": {
          "format": "double",
          "type": "number"
        },
        "SecondaryLowestAmountToPay": {
          "format": "double",
          "type": "number"
        },
        "CreditTime": {
          "format": "int32",
          "type": "integer"
        },
        "CreditTimeLeft": {
          "format": "int32",
          "type": "integer"
        },
        "CurrentCreditMonth": {
          "format": "int32",
          "type": "integer"
        },
        "InvoiceRows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UnifiedInvoiceRow"
          }
        },
        "VatRows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VatRow"
          }
        }
      }
    },
    "GetNotificationDetailsRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "Response[GetNotificationDetailsResponse]": {
      "type": "object",
      "properties": {
        "ApiVersion": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        },
        "Data": {
          "$ref": "#/definitions/GetNotificationDetailsResponse"
        },
        "Error": {
          "$ref": "#/definitions/Error"
        },
        "CorrelationId": {
          "type": "string"
        }
      }
    },
    "GetNotificationDetailsResponse": {
      "type": "object",
      "properties": {
        "NotificationId": {
          "format": "int64",
          "type": "integer"
        },
        "NotificationDate": {
          "format": "date-time",
          "type": "string"
        },
        "DueDate": {
          "format": "date-time",
          "type": "string"
        },
        "PaymentStatus": {
          "type": "string"
        },
        "PaymentStatusChangeDate": {
          "format": "date-time",
          "type": "string"
        },
        "TotalAmountPaid": {
          "format": "double",
          "type": "number"
        },
        "TotalAmountToPay": {
          "format": "double",
          "type": "number"
        },
        "LowestAmountToPay": {
          "format": "double",
          "type": "number"
        },
        "SecondaryLowestAmountToPay": {
          "format": "double",
          "type": "number"
        },
        "CanBePartiallyPaid": {
          "default": false,
          "type": "boolean"
        },
        "ReturnDate": {
          "format": "date-time",
          "type": "string"
        },
        "CancellationDate": {
          "format": "date-time",
          "type": "string"
        },
        "ReplacementDate": {
          "format": "date-time",
          "type": "string"
        },
        "CreditTermsConsentDate": {
          "format": "date-time",
          "type": "string"
        },
        "AccountIsTransformedFromInvoice": {
          "default": false,
          "type": "boolean"
        },
        "AccountInDebtCollectionSinceDate": {
          "format": "date-time",
          "type": "string"
        },
        "IsInactive": {
          "default": false,
          "type": "boolean"
        },
        "FollowingNotificationId": {
          "format": "int64",
          "type": "integer"
        },
        "PartnerId": {
          "format": "int32",
          "type": "integer"
        },
        "PartnerName": {
          "type": "string"
        },
        "AccountType": {
          "type": "string"
        },
        "NotificationState": {
          "type": "string"
        },
        "PaymentReferenceNumber": {
          "type": "string"
        },
        "CanAccountBeConverted": {
          "default": false,
          "type": "boolean"
        },
        "AccountId": {
          "format": "int64",
          "type": "integer"
        },
        "CapitalDebtLeftToPay": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "GetNotificationDocumentByExportOrderIdRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "GetNotificationDocumentsByNotificationIdRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "Response[IEnumerable[NotificationExportOrderDocument]]": {
      "type": "object",
      "properties": {
        "ApiVersion": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        },
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NotificationExportOrderDocument"
          }
        },
        "Error": {
          "$ref": "#/definitions/Error"
        },
        "CorrelationId": {
          "type": "string"
        }
      }
    },
    "GetNotificationHistoryRequest": {
      "required": [
        "PageSize",
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PageSize": {
          "format": "int32",
          "description": "(PAGE_SIZE_REQUIRED)<br/>Range: inclusive between 1 and 50 ()",
          "maximum": 50,
          "minimum": 1,
          "type": "integer"
        },
        "PageIndex": {
          "format": "int32",
          "description": "Range: inclusive between 0 and 2147483647 ()",
          "maximum": 2147483647,
          "minimum": 0,
          "type": "integer"
        },
        "StartDate": {
          "format": "date-time",
          "type": "string"
        },
        "EndDate": {
          "format": "date-time",
          "type": "string"
        },
        "AccountId": {
          "format": "int64",
          "type": "integer"
        },
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "Response[GetNotificationHistoryResponse]": {
      "type": "object",
      "properties": {
        "ApiVersion": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        },
        "Data": {
          "$ref": "#/definitions/GetNotificationHistoryResponse"
        },
        "Error": {
          "$ref": "#/definitions/Error"
        },
        "CorrelationId": {
          "type": "string"
        }
      }
    },
    "GetNotificationHistoryResponse": {
      "type": "object",
      "properties": {
        "TotalSize": {
          "format": "int32",
          "type": "integer"
        },
        "Notifications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HistoricalNotification"
          }
        }
      }
    },
    "HistoricalNotification": {
      "type": "object",
      "properties": {
        "NotificationId": {
          "format": "int64",
          "type": "integer"
        },
        "NotificationDate": {
          "format": "date-time",
          "type": "string"
        },
        "DueDate": {
          "format": "date-time",
          "type": "string"
        },
        "TotalAmountToPay": {
          "format": "double",
          "type": "number"
        },
        "LowestAmountToPay": {
          "format": "double",
          "type": "number"
        },
        "SecondaryLowestAmountToPay": {
          "format": "double",
          "type": "number"
        },
        "CurrencyCode": {
          "type": "string"
        },
        "AccountType": {
          "type": "string"
        },
        "PartnerName": {
          "type": "string"
        },
        "PaymentStatus": {
          "type": "string"
        },
        "NotificationState": {
          "type": "string"
        },
        "AccountId": {
          "format": "int64",
          "type": "integer"
        }
      }
    },
    "GetNotificationPdfRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "GetNotificationPdfForSecondaryApplicantRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "GetPartnerRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "Response[GetPartnerResponse]": {
      "type": "object",
      "properties": {
        "ApiVersion": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        },
        "Data": {
          "$ref": "#/definitions/GetPartnerResponse"
        },
        "Error": {
          "$ref": "#/definitions/Error"
        },
        "CorrelationId": {
          "type": "string"
        }
      }
    },
    "GetPartnerResponse": {
      "type": "object",
      "properties": {
        "PartnerId": {
          "format": "int32",
          "type": "integer"
        },
        "Name": {
          "type": "string"
        },
        "VatNumber": {
          "type": "string"
        },
        "AgreementCode": {
          "type": "string"
        }
      }
    },
    "GetPartnerAgreementRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "Response[GetPartnerAgreementResponse]": {
      "type": "object",
      "properties": {
        "ApiVersion": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        },
        "Data": {
          "$ref": "#/definitions/GetPartnerAgreementResponse"
        },
        "Error": {
          "$ref": "#/definitions/Error"
        },
        "CorrelationId": {
          "type": "string"
        }
      }
    },
    "GetPartnerAgreementResponse": {
      "type": "object",
      "properties": {
        "AllowDivergentDeliveryAddress": {
          "default": false,
          "type": "boolean"
        },
        "AllowAntiFraudAnalysis": {
          "default": false,
          "type": "boolean"
        },
        "AllowOverrideSigning": {
          "default": false,
          "type": "boolean"
        },
        "CreditLimit": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "GetPartnersNamesRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "Response[GetPartnersNamesResponse]": {
      "type": "object",
      "properties": {
        "ApiVersion": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        },
        "Data": {
          "$ref": "#/definitions/GetPartnersNamesResponse"
        },
        "Error": {
          "$ref": "#/definitions/Error"
        },
        "CorrelationId": {
          "type": "string"
        }
      }
    },
    "GetPartnersNamesResponse": {
      "type": "object",
      "properties": {
        "Names": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GetPendingCreditTransactionsRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "GetPersonTranscriptRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "Response[GetPersonTranscriptResponse]": {
      "type": "object",
      "properties": {
        "ApiVersion": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        },
        "Data": {
          "$ref": "#/definitions/GetPersonTranscriptResponse"
        },
        "Error": {
          "$ref": "#/definitions/Error"
        },
        "CorrelationId": {
          "type": "string"
        }
      }
    },
    "GetPersonTranscriptResponse": {
      "type": "object",
      "properties": {
        "Person": {
          "$ref": "#/definitions/Person"
        }
      }
    },
    "Person": {
      "type": "object",
      "properties": {
        "Names": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "PersonNumbers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "EngagementsForRole": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Engagement"
            }
          }
        },
        "Id": {
          "type": "string"
        },
        "ContactInfos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactInfo"
          }
        },
        "Specifications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Specification"
          }
        },
        "Notes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Note"
          }
        }
      }
    },
    "Engagement": {
      "type": "object",
      "properties": {
        "Type": {
          "type": "string"
        },
        "Number": {
          "type": "string"
        },
        "Balance": {
          "$ref": "#/definitions/Money"
        },
        "Started": {
          "format": "date-time",
          "type": "string"
        },
        "Ended": {
          "format": "date-time",
          "type": "string"
        },
        "Id": {
          "type": "string"
        },
        "ContactInfos": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactInfo"
          }
        },
        "Specifications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Specification"
          }
        },
        "Notes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Note"
          }
        }
      }
    },
    "ContactInfo": {
      "type": "object",
      "properties": {
        "Type": {
          "type": "string"
        },
        "Source": {
          "type": "string"
        },
        "Value": {
          "type": "string"
        }
      }
    },
    "Specification": {
      "type": "object",
      "properties": {
        "Type": {
          "type": "string"
        },
        "Created": {
          "format": "date-time",
          "type": "string"
        },
        "Retention": {
          "$ref": "#/definitions/Duration"
        }
      }
    },
    "Note": {
      "type": "object",
      "properties": {
        "Created": {
          "format": "date-time",
          "type": "string"
        },
        "Text": {
          "type": "string"
        }
      }
    },
    "Money": {
      "type": "object",
      "properties": {
        "Value": {
          "format": "double",
          "type": "number"
        },
        "Currency": {
          "type": "string"
        }
      }
    },
    "Duration": {
      "type": "object",
      "properties": {
        "Value": {
          "format": "double",
          "type": "number"
        },
        "Unit": {
          "format": "int32",
          "enum": [
            0,
            1,
            2,
            3
          ],
          "type": "integer"
        }
      }
    },
    "GetPortalUserRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "Response[GetPortalUserResponse]": {
      "type": "object",
      "properties": {
        "ApiVersion": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        },
        "Data": {
          "$ref": "#/definitions/GetPortalUserResponse"
        },
        "Error": {
          "$ref": "#/definitions/Error"
        },
        "CorrelationId": {
          "type": "string"
        }
      }
    },
    "GetPortalUserResponse": {
      "type": "object",
      "properties": {
        "PartnerIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "PortalRoleIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "Username": {
          "type": "string"
        }
      }
    },
    "ModifyPortalUserRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "Password": {
          "description": "String length: inclusive between 6 and 2147483647 (PASSWORD_MINIMUM_LENGTH)",
          "maxLength": 2147483647,
          "minLength": 6,
          "type": "string"
        },
        "PartnerIds": {
          "$ref": "#/definitions/ListPatch[Int32]"
        },
        "PortalRoleIds": {
          "$ref": "#/definitions/ListPatch[Int32]"
        },
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "ListPatch[Int32]": {
      "type": "object",
      "properties": {
        "AddItems": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "RemoveItems": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        }
      }
    },
    "RemovePortalUserRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "GetPreferredInvoiceAddressHistoryRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "Response[GetPreferredInvoiceAddressHistoryResponse]": {
      "type": "object",
      "properties": {
        "ApiVersion": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        },
        "Data": {
          "$ref": "#/definitions/GetPreferredInvoiceAddressHistoryResponse"
        },
        "Error": {
          "$ref": "#/definitions/Error"
        },
        "CorrelationId": {
          "type": "string"
        }
      }
    },
    "GetPreferredInvoiceAddressHistoryResponse": {
      "type": "object",
      "properties": {
        "PreferredInvoiceAddresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomerPreferredInvoiceAddress"
          }
        }
      }
    },
    "CustomerPreferredInvoiceAddress": {
      "type": "object",
      "properties": {
        "Address": {
          "$ref": "#/definitions/CustomerAddress"
        },
        "CustomerPreferredInvoiceAddressId": {
          "format": "uuid",
          "type": "string"
        },
        "PerformedOn": {
          "format": "date-time",
          "type": "string"
        },
        "PerformedBy": {
          "type": "string"
        }
      }
    },
    "GetPrimaryEmailAddressByAccountIdRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "Response[GetPrimaryEmailAddressByAccountIdResponse]": {
      "type": "object",
      "properties": {
        "ApiVersion": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        },
        "Data": {
          "$ref": "#/definitions/GetPrimaryEmailAddressByAccountIdResponse"
        },
        "Error": {
          "$ref": "#/definitions/Error"
        },
        "CorrelationId": {
          "type": "string"
        }
      }
    },
    "GetPrimaryEmailAddressByAccountIdResponse": {
      "type": "object",
      "properties": {
        "PrimaryEmailAddress": {
          "type": "string"
        }
      }
    },
    "GetProductsRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "Amount": {
          "format": "double",
          "type": "number"
        },
        "IncludeInternalProducts": {
          "default": false,
          "type": "boolean"
        },
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "Response[GetProductsResponse]": {
      "type": "object",
      "properties": {
        "ApiVersion": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        },
        "Data": {
          "$ref": "#/definitions/GetProductsResponse"
        },
        "Error": {
          "$ref": "#/definitions/Error"
        },
        "CorrelationId": {
          "type": "string"
        }
      }
    },
    "GetProductsResponse": {
      "type": "object",
      "properties": {
        "Products": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Product"
          }
        }
      }
    },
    "Product": {
      "type": "object",
      "properties": {
        "ProductCode": {
          "type": "string"
        },
        "ProductDescription": {
          "type": "string"
        },
        "InvoiceType": {
          "format": "int32",
          "type": "integer"
        },
        "PurchasePreview": {
          "$ref": "#/definitions/PurchasePreview"
        }
      }
    },
    "PurchasePreview": {
      "type": "object",
      "properties": {
        "InitialNotificationFee": {
          "format": "double",
          "type": "number"
        },
        "SecondaryNotificationFee": {
          "format": "double",
          "type": "number"
        },
        "OriginationFee": {
          "format": "double",
          "type": "number"
        },
        "CampaignFee": {
          "format": "double",
          "type": "number"
        },
        "DueDate": {
          "format": "date-time",
          "type": "string"
        },
        "CreditTime": {
          "format": "int32",
          "type": "integer"
        },
        "YearlyInterestRate": {
          "format": "double",
          "type": "number"
        },
        "LowestAmountToPay": {
          "format": "double",
          "type": "number"
        },
        "MonthlyAmount": {
          "format": "double",
          "type": "number"
        },
        "IsAllowedToSendNotificationByEmail": {
          "default": false,
          "type": "boolean"
        },
        "IsAllowedToSendNotificationByMail": {
          "default": false,
          "type": "boolean"
        }
      }
    },
    "GetPurchaseMetadataRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "Response[GetPurchaseMetadataResponse]": {
      "type": "object",
      "properties": {
        "ApiVersion": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        },
        "Data": {
          "$ref": "#/definitions/GetPurchaseMetadataResponse"
        },
        "Error": {
          "$ref": "#/definitions/Error"
        },
        "CorrelationId": {
          "type": "string"
        }
      }
    },
    "GetPurchaseMetadataResponse": {
      "type": "object",
      "properties": {
        "PurchaserAlias": {
          "type": "string"
        },
        "OriginalCurrencyInformation": {
          "$ref": "#/definitions/OriginalCurrencyInformation"
        },
        "CostCenter": {
          "type": "string"
        },
        "ReferencePerson": {
          "type": "string"
        },
        "IntegrationId": {
          "type": "string"
        },
        "Reference": {
          "type": "string"
        },
        "InternalComment": {
          "type": "string"
        },
        "BuyerInformation": {
          "$ref": "#/definitions/BuyerInformation"
        }
      }
    },
    "BuyerInformation": {
      "type": "object",
      "properties": {
        "FirstName": {
          "type": "string"
        },
        "LastName": {
          "type": "string"
        },
        "RegistrationNumber": {
          "type": "string"
        },
        "PhoneNumber": {
          "type": "string"
        },
        "MobilePhone": {
          "type": "string"
        },
        "Email": {
          "type": "string"
        }
      }
    },
    "GetReportRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "Response[GetReportResponse]": {
      "type": "object",
      "properties": {
        "ApiVersion": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        },
        "Data": {
          "$ref": "#/definitions/GetReportResponse"
        },
        "Error": {
          "$ref": "#/definitions/Error"
        },
        "CorrelationId": {
          "type": "string"
        }
      }
    },
    "GetReportResponse": {
      "type": "object",
      "properties": {
        "ColumnNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Rows": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    },
    "GetReservationApplicationRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "Response[GetReservationApplicationResponse]": {
      "type": "object",
      "properties": {
        "ApiVersion": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        },
        "Data": {
          "$ref": "#/definitions/GetReservationApplicationResponse"
        },
        "Error": {
          "$ref": "#/definitions/Error"
        },
        "CorrelationId": {
          "type": "string"
        }
      }
    },
    "GetReservationApplicationResponse": {
      "type": "object",
      "properties": {
        "ReservationApplicationId": {
          "format": "uuid",
          "type": "string"
        },
        "RegistrationNumber": {
          "type": "string"
        },
        "PartnerId": {
          "format": "int32",
          "type": "integer"
        },
        "RequestedAmount": {
          "format": "double",
          "type": "number"
        },
        "CurrencyCode": {
          "type": "string"
        },
        "CountryCode": {
          "type": "string"
        },
        "ApplicationStatus": {
          "type": "string"
        },
        "ProductCode": {
          "type": "string"
        },
        "AdditionalInformation": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "GetReservationsRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PartnerId": {
          "format": "int32",
          "type": "integer"
        },
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "Response[GetReservationsResponse]": {
      "type": "object",
      "properties": {
        "ApiVersion": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        },
        "Data": {
          "$ref": "#/definitions/GetReservationsResponse"
        },
        "Error": {
          "$ref": "#/definitions/Error"
        },
        "CorrelationId": {
          "type": "string"
        }
      }
    },
    "GetReservationsResponse": {
      "type": "object",
      "properties": {
        "Reservations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReservationResponse"
          }
        }
      }
    },
    "ReservationResponse": {
      "type": "object",
      "properties": {
        "ReservationId": {
          "format": "int64",
          "type": "integer"
        },
        "PartnerId": {
          "format": "int32",
          "type": "integer"
        },
        "PartnerName": {
          "type": "string"
        },
        "Status": {
          "type": "string"
        },
        "ReservationAmount": {
          "format": "double",
          "type": "number"
        },
        "AvailableReservationAmount": {
          "format": "double",
          "type": "number"
        },
        "ReservationIncreasedDate": {
          "format": "date-time",
          "type": "string"
        },
        "ReservationCreatedDate": {
          "format": "date-time",
          "type": "string"
        },
        "ProductCode": {
          "type": "string"
        }
      }
    },
    "GetRuleRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "ExpandCriteria": {
          "default": false,
          "type": "boolean"
        },
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "Response[GetRuleResponse]": {
      "type": "object",
      "properties": {
        "ApiVersion": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        },
        "Data": {
          "$ref": "#/definitions/GetRuleResponse"
        },
        "Error": {
          "$ref": "#/definitions/Error"
        },
        "CorrelationId": {
          "type": "string"
        }
      }
    },
    "RemoveRuleRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "UpdateRuleRequest": {
      "required": [
        "Name",
        "Action",
        "Order",
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "Name": {
          "description": "(RULE_NAME_REQUIRED)<br/>String length: inclusive between 0 and 50 (RULE_NAME_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Description": {
          "description": "String length: inclusive between 0 and 200 (RULE_DESCRIPTION_LENGTH)",
          "maxLength": 200,
          "minLength": 0,
          "type": "string"
        },
        "Action": {
          "description": "(RULE_ACTION_REQUIRED)<br/>Value must be in the set: [AddInvoiceOnHold, AddInvoice, DenyInvoice, AddInvoiceSigning, NoMatch] (RULE_ACTION_INVALID)",
          "type": "string"
        },
        "Order": {
          "format": "int32",
          "description": "(RULE_ORDER_REQUIRED)<br/>(RULE_ORDER_RANGE)",
          "maximum": 2147483647,
          "minimum": 0,
          "type": "integer"
        },
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "GetRuleCriterionRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "Response[GetRuleCriterionResponse]": {
      "type": "object",
      "properties": {
        "ApiVersion": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        },
        "Data": {
          "$ref": "#/definitions/GetRuleCriterionResponse"
        },
        "Error": {
          "$ref": "#/definitions/Error"
        },
        "CorrelationId": {
          "type": "string"
        }
      }
    },
    "RemoveRuleCriterionRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "GetSecciSettingsByAccountIdRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "Response[GetSecciSettingsByAccountIdResponse]": {
      "type": "object",
      "properties": {
        "ApiVersion": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        },
        "Data": {
          "$ref": "#/definitions/GetSecciSettingsByAccountIdResponse"
        },
        "Error": {
          "$ref": "#/definitions/Error"
        },
        "CorrelationId": {
          "type": "string"
        }
      }
    },
    "GetSecciSettingsByAccountIdResponse": {
      "type": "object",
      "properties": {
        "PartnerName": {
          "type": "string"
        },
        "CreditLimit": {
          "format": "double",
          "type": "number"
        },
        "NotificationFee": {
          "format": "double",
          "type": "number"
        },
        "YearlyInterestRate": {
          "format": "double",
          "type": "number"
        },
        "CreditAmount": {
          "format": "double",
          "type": "number"
        },
        "CreditTime": {
          "format": "int32",
          "type": "integer"
        },
        "CampaignFee": {
          "format": "double",
          "type": "number"
        },
        "OriginationFee": {
          "format": "double",
          "type": "number"
        },
        "AccountType": {
          "type": "string"
        }
      }
    },
    "GetServiceUserRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "Response[GetServiceUserResponse]": {
      "type": "object",
      "properties": {
        "ApiVersion": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        },
        "Data": {
          "$ref": "#/definitions/GetServiceUserResponse"
        },
        "Error": {
          "$ref": "#/definitions/Error"
        },
        "CorrelationId": {
          "type": "string"
        }
      }
    },
    "GetServiceUserResponse": {
      "type": "object",
      "properties": {
        "PartnerIds": {
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        },
        "Username": {
          "type": "string"
        },
        "HasAccessToAllPartners": {
          "default": false,
          "type": "boolean"
        },
        "DefaultPartnerId": {
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ModifyServiceUserRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "Password": {
          "description": "String length: inclusive between 6 and 2147483647 (PASSWORD_MINIMUM_LENGTH)",
          "maxLength": 2147483647,
          "minLength": 6,
          "type": "string"
        },
        "PartnerIds": {
          "$ref": "#/definitions/ListPatch[Int32]"
        },
        "DefaultPartnerId": {
          "format": "int32",
          "type": "integer"
        },
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "RemoveServiceUserRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "GetSigningRequirementRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "Response[GetSigningRequirementResponse]": {
      "type": "object",
      "properties": {
        "ApiVersion": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        },
        "Data": {
          "$ref": "#/definitions/GetSigningRequirementResponse"
        },
        "Error": {
          "$ref": "#/definitions/Error"
        },
        "CorrelationId": {
          "type": "string"
        }
      }
    },
    "GetSigningRequirementResponse": {
      "type": "object",
      "properties": {
        "SigningRequirementId": {
          "format": "uuid",
          "type": "string"
        },
        "CustomerId": {
          "format": "int64",
          "type": "integer"
        },
        "PartnerId": {
          "format": "int32",
          "type": "integer"
        },
        "RegistrationNumber": {
          "type": "string"
        },
        "CountryCode": {
          "type": "string"
        },
        "Email": {
          "type": "string"
        },
        "CreatedOn": {
          "format": "date-time",
          "type": "string"
        },
        "ExpirationDate": {
          "format": "date-time",
          "type": "string"
        },
        "SignedDate": {
          "format": "date-time",
          "type": "string"
        },
        "SigningRequirementType": {
          "type": "string"
        },
        "SigningState": {
          "type": "string"
        },
        "SignedFrom": {
          "type": "string"
        },
        "SignedBy": {
          "type": "string"
        },
        "IsGuarantor": {
          "default": false,
          "type": "boolean"
        },
        "IsSigningForCompany": {
          "default": false,
          "type": "boolean"
        }
      }
    },
    "ModifySigningRequirementRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "Email": {
          "description": "String length: inclusive between 0 and 250 (EMAIL_LENGTH)<br/>Value must be a valid email. (EMAIL_INVALID)",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "GetSigningRequirementPurchaseInformationRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "Response[GetSigningRequirementPurchaseInformationResponse]": {
      "type": "object",
      "properties": {
        "ApiVersion": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        },
        "Data": {
          "$ref": "#/definitions/GetSigningRequirementPurchaseInformationResponse"
        },
        "Error": {
          "$ref": "#/definitions/Error"
        },
        "CorrelationId": {
          "type": "string"
        }
      }
    },
    "GetSigningRequirementPurchaseInformationResponse": {
      "type": "object",
      "properties": {
        "PendingInvoiceId": {
          "format": "int64",
          "type": "integer"
        },
        "Amount": {
          "format": "double",
          "type": "number"
        },
        "CurrencyCode": {
          "type": "string"
        },
        "CustomerCompanyName": {
          "type": "string"
        },
        "CustomerCompanyRegNo": {
          "type": "string"
        }
      }
    },
    "GetSigningRequirementReservationInformationRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "Response[GetSigningRequirementReservationInformationResponse]": {
      "type": "object",
      "properties": {
        "ApiVersion": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        },
        "Data": {
          "$ref": "#/definitions/GetSigningRequirementReservationInformationResponse"
        },
        "Error": {
          "$ref": "#/definitions/Error"
        },
        "CorrelationId": {
          "type": "string"
        }
      }
    },
    "GetSigningRequirementReservationInformationResponse": {
      "type": "object",
      "properties": {
        "CustomerDebtId": {
          "format": "int64",
          "type": "integer"
        },
        "Amount": {
          "format": "double",
          "type": "number"
        },
        "CustomerCompanyName": {
          "type": "string"
        },
        "CustomerCompanyRegNo": {
          "type": "string"
        }
      }
    },
    "GetSigningRequirementsRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "CustomerId": {
          "format": "int64",
          "type": "integer"
        },
        "RegistrationNumber": {
          "type": "string"
        },
        "CountryCode": {
          "type": "string"
        },
        "Email": {
          "type": "string"
        },
        "Status": {
          "type": "string"
        },
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "Response[IEnumerable[GetSigningRequirementsResponse]]": {
      "type": "object",
      "properties": {
        "ApiVersion": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        },
        "Data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetSigningRequirementsResponse"
          }
        },
        "Error": {
          "$ref": "#/definitions/Error"
        },
        "CorrelationId": {
          "type": "string"
        }
      }
    },
    "GetSigningRequirementsResponse": {
      "type": "object",
      "properties": {
        "SigningRequirementId": {
          "format": "uuid",
          "type": "string"
        },
        "CustomerId": {
          "format": "int64",
          "type": "integer"
        },
        "PartnerId": {
          "format": "int32",
          "type": "integer"
        },
        "RegistrationNumber": {
          "type": "string"
        },
        "CountryCode": {
          "type": "string"
        },
        "Email": {
          "type": "string"
        },
        "CreatedOn": {
          "format": "date-time",
          "type": "string"
        },
        "ExpirationDate": {
          "format": "date-time",
          "type": "string"
        },
        "SignedDate": {
          "format": "date-time",
          "type": "string"
        },
        "SigningRequirementType": {
          "type": "string"
        },
        "SigningState": {
          "type": "string"
        },
        "SignedFrom": {
          "type": "string"
        },
        "SignedBy": {
          "type": "string"
        },
        "IsGuarantor": {
          "default": false,
          "type": "boolean"
        },
        "IsSigningForCompany": {
          "default": false,
          "type": "boolean"
        }
      }
    },
    "GetSoldDebtPaymentsToProcessRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PaymentReference": {
          "type": "string"
        },
        "Amount": {
          "type": "string"
        },
        "StartPeriod": {
          "format": "date-time",
          "type": "string"
        },
        "EndPeriod": {
          "format": "date-time",
          "type": "string"
        },
        "CountryCode": {
          "description": "Value must be a country code according to the ISO 3166 format. (COUNTRY_CODE_INVALID)",
          "type": "string"
        },
        "PageIndex": {
          "format": "int32",
          "description": "Range: inclusive between 0 and 2147483647 ()",
          "maximum": 2147483647,
          "minimum": 0,
          "type": "integer"
        },
        "PageSize": {
          "format": "int32",
          "description": "Range: inclusive between 1 and 10000 ()",
          "maximum": 10000,
          "minimum": 1,
          "type": "integer"
        },
        "Comment": {
          "type": "string"
        },
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "Response[GetSoldDebtPaymentsToProcessResponse]": {
      "type": "object",
      "properties": {
        "ApiVersion": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        },
        "Data": {
          "$ref": "#/definitions/GetSoldDebtPaymentsToProcessResponse"
        },
        "Error": {
          "$ref": "#/definitions/Error"
        },
        "CorrelationId": {
          "type": "string"
        }
      }
    },
    "GetSoldDebtPaymentsToProcessResponse": {
      "type": "object",
      "properties": {
        "TotalSize": {
          "format": "int32",
          "type": "integer"
        },
        "PaymentsToProcess": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SoldDebtPayment"
          }
        }
      }
    },
    "SoldDebtPayment": {
      "type": "object",
      "properties": {
        "SoldDebtPaymentId": {
          "format": "int64",
          "type": "integer"
        },
        "PaymentDate": {
          "format": "date-time",
          "type": "string"
        },
        "CountryCode": {
          "type": "string"
        },
        "PaymentReference": {
          "type": "string"
        },
        "Amount": {
          "format": "double",
          "type": "number"
        },
        "FileName": {
          "type": "string"
        },
        "MetaData": {
          "type": "string"
        },
        "Comment": {
          "type": "string"
        }
      }
    },
    "GetUnidentifiedPaymentsToProcessRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PaymentReference": {
          "type": "string"
        },
        "Amount": {
          "type": "string"
        },
        "StartPeriod": {
          "format": "date-time",
          "type": "string"
        },
        "EndPeriod": {
          "format": "date-time",
          "type": "string"
        },
        "CountryCode": {
          "description": "Value must be a country code according to the ISO 3166 format. (COUNTRY_CODE_INVALID)",
          "type": "string"
        },
        "PageIndex": {
          "format": "int32",
          "description": "Range: inclusive between 0 and 2147483647 ()",
          "maximum": 2147483647,
          "minimum": 0,
          "type": "integer"
        },
        "PageSize": {
          "format": "int32",
          "description": "Range: inclusive between 1 and 10000 ()",
          "maximum": 10000,
          "minimum": 1,
          "type": "integer"
        },
        "Comment": {
          "type": "string"
        },
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "Response[GetUnidentifiedPaymentsToProcessResponse]": {
      "type": "object",
      "properties": {
        "ApiVersion": {
          "type": "string"
        },
        "Context": {
          "type": "string"
        },
        "Data": {
          "$ref": "#/definitions/GetUnidentifiedPaymentsToProcessResponse"
        },
        "Error": {
          "$ref": "#/definitions/Error"
        },
        "CorrelationId": {
          "type": "string"
        }
      }
    },
    "GetUnidentifiedPaymentsToProcessResponse": {
      "type": "object",
      "properties": {
        "TotalSize": {
          "format": "int32",
          "type": "integer"
        },
        "UnidentifiedPayments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UnidentifiedPayment"
          }
        }
      }
    },
    "UnidentifiedPayment": {
      "type": "object",
      "properties": {
        "UnidentifiedPaymentId": {
          "format": "int64",
          "type": "integer"
        },
        "PaymentDate": {
          "format": "date-time",
          "type": "string"
        },
        "CountryCode": {
          "type": "string"
        },
        "PaymentReference": {
          "type": "string"
        },
        "Amount": {
          "format": "double",
          "type": "number"
        },
        "FileName": {
          "type": "string"
        },
        "MetaData": {
          "type": "string"
        },
        "Comment": {
          "type": "string"
        }
      }
    },
    "GetVisibleTransactionsRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "ModifyCreditTemplateRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "IsDefault": {
          "default": false,
          "type": "boolean"
        },
        "IsFallbackTemplate": {
          "default": false,
          "type": "boolean"
        },
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "RemoveCreditTemplateRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "UpdateCreditTemplateRequest": {
      "required": [
        "TemplateCode",
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "CreditLimit": {
          "format": "int32",
          "description": "(CREDIT_LIMIT_RANGE)",
          "maximum": 2147483647,
          "minimum": 0,
          "type": "integer"
        },
        "CutOffScore": {
          "format": "int32",
          "description": "(CUTOFF_SCORE_RANGE)",
          "maximum": 2147483647,
          "minimum": 0,
          "type": "integer"
        },
        "CustomerCode": {
          "description": "String length: inclusive between 0 and 50 (CUSTOMER_CODE_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "FallbackTemplateId": {
          "format": "int32",
          "type": "integer"
        },
        "InternalScore": {
          "format": "int32",
          "description": "(INTERNAL_SCORE_RANGE)",
          "maximum": 2147483647,
          "minimum": 0,
          "type": "integer"
        },
        "PrimaryUsername": {
          "description": "String length: inclusive between 0 and 50 (PRIMARY_USERNAME_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "PrimaryPassword": {
          "description": "String length: inclusive between 0 and 50 (PRIMARY_PASSWORD_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "ScoringModelName": {
          "description": "String length: inclusive between 0 and 30 (SCORING_MODEL_NAME_LENGTH)",
          "maxLength": 30,
          "minLength": 0,
          "type": "string"
        },
        "TemplateCode": {
          "description": "(TEMPLATE_CODE_REQUIRED)<br/>String length: inclusive between 0 and 50 (TEMPLATE_CODE_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "ModifyExportOrderRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "ExportDate": {
          "format": "date-time",
          "type": "string"
        },
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "RemoveDefaultCreditTemplateConfigurationRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "UpdateDefaultCreditTemplateConfigurationRequest": {
      "required": [
        "CreditValidationStrategy",
        "TemplateCode",
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "CreditServiceId": {
          "format": "int32",
          "type": "integer"
        },
        "CreditLimit": {
          "format": "int32",
          "description": "(CREDIT_LIMIT_RANGE)",
          "maximum": 2147483647,
          "minimum": 0,
          "type": "integer"
        },
        "DefaultCutoffScore": {
          "format": "int32",
          "description": "(DEFAULT_CUTOFF_SCORE_RANGE)",
          "maximum": 2147483647,
          "minimum": 0,
          "type": "integer"
        },
        "DefaultInternalScore": {
          "format": "int32",
          "description": "(DEFAULT_INTERNAL_SCORE_RANGE)",
          "maximum": 2147483647,
          "minimum": 0,
          "type": "integer"
        },
        "DefaultScoringModelName": {
          "description": "String length: inclusive between 0 and 30 (DEFAULT_SCORING_MODEL_NAME_LENGTH)",
          "maxLength": 30,
          "minLength": 0,
          "type": "string"
        },
        "FallbackTemplateId": {
          "format": "int32",
          "type": "integer"
        },
        "CreditValidationStrategy": {
          "description": "(CREDIT_VALIDATION_STRATEGY_REQUIRED)<br/>Value must be in the set: [Scoring, TargetRegistrationNumbers, ProviderRegistrationNumbers, NationalRegistrationNumbers, ExternalScoring] (CREDIT_VALIDATION_STRATEGY_INVALID)",
          "type": "string"
        },
        "TemplateCode": {
          "description": "(TEMPLATE_CODE_REQUIRED)<br/>String length: inclusive between 0 and 255 (TEMPLATE_CODE_LENGTH)",
          "maxLength": 255,
          "minLength": 0,
          "type": "string"
        },
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "RemoveFloatingInterestValueRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "RemovePartnerCustomTextRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "UpdatePartnerCustomTextRequest": {
      "required": [
        "Value",
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "Value": {
          "description": "(CUSTOM_TEXT_VALUE_REQUIRED)<br/>String length: inclusive between 0 and 4000 (CUSTOM_TEXT_VALUE_LENGTH)",
          "maxLength": 4000,
          "minLength": 0,
          "type": "string"
        },
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "StrongCustomerVerificationRequirementCallbackRequest": {
      "required": [
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "Secret": {
          "type": "string"
        },
        "Status": {
          "type": "string"
        },
        "Reference": {
          "type": "string"
        },
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "UpdateInvoiceAddressRequest": {
      "required": [
        "City",
        "PostalCode",
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "AddressLine1": {
          "description": "String length: inclusive between 0 and 50 (ADDRESS1_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "AddressLine2": {
          "description": "String length: inclusive between 0 and 50 (ADDRESS2_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "CoAddress": {
          "description": "String length: inclusive between 0 and 50 (CO_ADDRESS_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "City": {
          "description": "String length: inclusive between 0 and 50 (CITY_LENGTH)<br/>(CITY_REQUIRED)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "PostalCode": {
          "description": "String length: inclusive between 0 and 20 (POSTAL_CODE_LENGTH)<br/>(POSTAL_CODE_REQUIRED)",
          "maxLength": 20,
          "minLength": 0,
          "type": "string"
        },
        "FirstName": {
          "description": "String length: inclusive between 0 and 50 (FIRST_NAME_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "LastName": {
          "description": "String length: inclusive between 0 and 50 (LAST_NAME_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "CompanyName": {
          "description": "String length: inclusive between 0 and 100 (COMPANY_NAME_LENGTH)",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "PhoneNumber": {
          "description": "String length: inclusive between 0 and 20 (PHONE_NUMBER_LENGTH)",
          "maxLength": 20,
          "minLength": 0,
          "type": "string"
        },
        "MobilePhone": {
          "description": "Value must be a mobile phone number. (MOBILE_PHONE_INVALID)",
          "type": "string"
        },
        "Email": {
          "description": "Value must be a valid email. (EMAIL_INVALID)",
          "type": "string"
        },
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    },
    "UpdateReservationAddressRequest": {
      "required": [
        "City",
        "PostalCode",
        "PerformedBy"
      ],
      "type": "object",
      "properties": {
        "FirstName": {
          "description": "String length: inclusive between 0 and 50 (FIRST_NAME_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "LastName": {
          "description": "String length: inclusive between 0 and 50 (LAST_NAME_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "CompanyName": {
          "description": "String length: inclusive between 0 and 100 (COMPANY_NAME_LENGTH)",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "AddressLine1": {
          "description": "String length: inclusive between 0 and 50 (ADDRESS1_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "AddressLine2": {
          "description": "String length: inclusive between 0 and 50 (ADDRESS2_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "CoAddress": {
          "description": "String length: inclusive between 0 and 50 (CO_ADDRESS_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "City": {
          "description": "String length: inclusive between 0 and 50 (CITY_LENGTH)<br/>(CITY_REQUIRED)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "PostalCode": {
          "description": "String length: inclusive between 0 and 20 (POSTAL_CODE_LENGTH)<br/>(POSTAL_CODE_REQUIRED)",
          "maxLength": 20,
          "minLength": 0,
          "type": "string"
        },
        "PerformedBy": {
          "description": "(PERFORMED_BY_REQUIRED)<br/>String length: inclusive between 0 and 50 (PERFORMED_BY_LENGTH)",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "Context": {
          "type": "string"
        }
      }
    }
  }
}